flush ruleset;

table ip filter {
	chain input {
		 type filter hook input priority 0;
		 ip protocol icmp accept
		 ip protocol esp accept
		 ip protocol ah accept
		 ip protocol udp accept
		 udp dport { isakmp, l2tp, ipsec-nat-t} accept
		 ct state { related, established} accept
		 ct state invalid drop
		 iifname "lo" accept
		 iif lo ct state new accept
		 iifname { "eth1", "eth9", "eth6", "eth3", "br1", "eth8", "br0", "eth10", "eth0", "eth7", "eth11", "eth2", "eth5", "eth4"} accept
		 iif { eth0, eth9, br0, br1, eth3, eth5, eth7, eth2, eth6, eth4, eth1, eth8} ct state new accept
		 icmp type echo-request accept
		 tcp dport { http, ssh} accept
		 iifname "lo" accept
		 iifname { "br1", "br0"} tcp sport { ftp, ftp-data} ct state new accept
		 iifname { "br1", "br0"} ip protocol icmp accept
		 iifname { "br0", "br1"} accept
		 ip saddr { 127.0.0.1} iifname "lo" accept
		 ip saddr { 10.1.19.1} iifname "lo" accept
		 ip saddr { 10.1.0.0/24} ip daddr { 192.168.111.2} accept
		 ip saddr { 10.99.19.1} iifname "lo" accept
		 ip saddr { 10.99.0.0/24} ip daddr { 192.168.111.2} accept
		 ip saddr { 192.168.111.2} iifname "lo" accept
		 ip daddr { 192.168.111.2} tcp dport { https, http, 27000} accept
		 ip daddr { 192.168.111.2} ct state { related, established} accept
		 ip saddr { 192.168.222.2} iifname "lo" accept
		 ip daddr { 192.168.222.2} tcp dport { https, 27000, http} accept
		 ip daddr { 192.168.222.2} ct state { related, established} accept
		 drop
	}

	chain output {
		 type filter hook output priority 0;
		 ip protocol icmp accept
		 ct state { established, related} accept
		 ct state invalid drop
		 iifname "lo" accept
		 iif lo ct state new accept
		 iifname { "eth9", "eth6", "eth1", "eth10", "br1", "eth3", "eth7", "eth0", "eth4", "eth2", "eth5", "eth11", "eth8", "br0"} accept
		 iif { eth6, eth8, br1, eth1, eth11, eth2, br0, eth10, eth4, eth5, eth9, eth0, eth3, eth7} ct state new accept
		 icmp type echo-request accept
		 oif lo accept
		 oif { eth10, eth11} accept
		 ip protocol icmp accept
		 udp dport { ipsec-nat-t, isakmp, l2tp} accept
		 ip protocol { esp, ah, udp} accept
		 ip saddr { 10.1.19.1, 10.99.19.1} accept
		 ip saddr { 10.1.0.0/16, 10.99.0.0/16} accept
		 ip saddr { 192.168.111.2} accept
		 ip saddr { 192.168.222.2} accept
		 ip saddr { 127.0.0.1} accept
		 drop
	}

	chain forward {
		 type filter hook forward priority 0;
		 ct state { established, related} accept
		 ip protocol icmp accept
		 ct state invalid drop
		 iifname "lo" accept
		 iif lo ct state new accept
		 iifname { "eth2", "br1", "eth5", "br0", "eth4", "eth1", "eth7", "eth3", "eth10", "eth9", "eth0", "eth6", "eth11", "eth8"} accept
		 iif { eth3, eth5, eth8, eth2, eth4, eth6, eth7, br0, br1, eth11, eth1, eth0, eth10, eth9} ct state new accept
		 icmp type echo-request accept
		 ip protocol icmp accept
		 udp dport { ipsec-nat-t, isakmp, l2tp} accept
		 ip protocol { udp, gre, esp} accept
		 iifname { "eth2", "eth1", "eth8", "eth0", "br1", "eth3", "eth6", "eth7", "br0", "eth9", "eth4", "eth5"} oif { eth5, eth2, eth3, eth8, br1, eth11, br0, eth1, eth9, eth4, eth6, eth0, eth7, eth10} accept
		 ip saddr { 10.1.19.1, 10.99.19.1} tcp sport { http, https, 27000} accept
		 ip daddr { 10.1.19.1, 10.99.19.1} tcp dport { 27000, http, https} accept
		 ip daddr { 10.1.19.1, 10.99.19.1} tcp dport domain accept
		 ip daddr { 10.99.19.1, 10.1.19.1} udp dport domain accept
		 ip daddr { 10.1.19.1, 10.99.19.1} iifname { "br0", "br1"} accept
		 oif { br0, br1} ct state { related, established} accept
		 iifname { "br1", "br0"} ct state { related, established} accept
		 iifname { "br0", "br1"} oif { br0, br1} ip protocol icmp accept
                 meta iifname { eth10, eth11 } meta oif { br0, br1} ip daddr 10.1.19.4 tcp dport 8081 ct state new accept
		 meta iifname { eth10, eth11 } ct state new drop
		 drop
	}
}
table ip nat {
	chain prerouting {
		 type nat hook prerouting priority 0;
                 iifname { eth10, eth11 } tcp dport { 80 } dnat 10.1.19.4:8081
                 tcp dport 680 redirect to 555
		 accept
	}

	chain input {
		 type nat hook input priority 0;
		 accept
	}

	chain output {
		 type nat hook output priority 0;
		 accept
	}

	chain postrouting {
		 type nat hook postrouting priority 0;
		 ip saddr { 10.1.0.0/16, 10.99.0.0/16 } oif { eth10 } snat 192.168.111.2
		 ip saddr { 10.1.0.0/16, 10.99.0.0/16 } oif { eth11 } snat 192.168.222.2
		 masquerade
                 oifname { eth10, eth11 } ip saddr { 10.1.0.0/16, 10.99.0.0/16 } masquerade
		 accept
	}
}
table ip6 filter6 {
	chain input {
		 type filter hook input priority 0;
		 ip6 nexthdr ipv6-icmp accept
		 ct state { related, established} accept
		 ct state invalid drop
		 iifname "lo" accept
		 iif lo ct state new accept
		 iifname { "eth9", "eth0", "br1", "br0", "eth3", "eth8", "eth7", "eth1", "eth4", "eth6", "eth2", "eth5"} accept
		 iif { eth4, eth7, eth1, eth8, br1, eth3, eth9, eth2, eth6, br0, eth0, eth5} ct state new accept
		 icmpv6 type { nd-neighbor-solicit, echo-request} accept
		 tcp dport { http, ssh} accept
		 reject
		 drop
	}

	chain output {
		 type filter hook output priority 0;
		 iifname { "lo", "eth7", "eth4", "eth6", "eth1", "eth11", "eth9", "eth0", "br1", "eth3", "eth8", "eth2", "br0", "eth10", "eth5"} accept
		 iif { eth7, eth5, br1, eth9, eth0, eth10, eth11, eth3, eth2, eth1, br0, eth8, eth6, eth4} ct state new accept
		 accept
	}

	chain forward {
		 type filter hook forward priority 0;
		 drop
	}
}
table ip6 nat6 {
	chain prerouting {
		 type nat hook prerouting priority 0;
		 accept
	}

	chain input {
		 type nat hook input priority 0;
		 accept
	}

	chain output {
		 type nat hook output priority 0;
		 accept
	}

	chain postrouting {
		 type nat hook postrouting priority 0;
		 accept
	}
}
