
### Interfaces ###
 IFLOCAL = "lo0"
 IFEXT1 = "re3"
 IFEXT2 = "re2"
 IFINT1 = "bridge0"
 IFINT2 = "bridge1"
 IFPF ="pflog0"

### Default Protos ###
 PROTODEF ="{tcp, udp}"

### public accessible services (transport layer neutral)
 PORTPUBSVC ="{ 22, 80, 443, 8081, }"
 ICMPTYPE ="echoreq"

### internal network
 NETINT = "{ 10.3.0.0/16 10.30.0.0/16 }"
 SSH = "{ 22 }"
 GWINTIP1 = "{ 10.3.1.1 }"
 GWINTIP2 = "{ 10.30.1.1 }"

################ Options ######################################################
 set skip on {lo $IFLOCAL $IFPF}
# set debug urgent
 set block-policy drop
 set loginterface $IFINT1
 set state-policy if-bound
 set fingerprints "/etc/pf.os"
 set ruleset-optimization basic
 set optimization aggressive
 set timeout { tcp.closing 60, tcp.established 7200}

################ Normalization ###############################################
# set-tos 0x1c is Maximize-Reliability + Minimize-Delay + Maximize-Throughput
scrub out log on { $IFEXT1 $IFEXT2 } all random-id min-ttl 15 set-tos 0x1c fragment reassemble
scrub log on { $IFEXT1 $IFEXT2 } all reassemble tcp fragment reassemble
scrub in all
scrub all reassemble tcp no-df
scrub in all fragment reassemble
scrub out all random-id

################ Translation #################################################
### NAT and Redirection rules are first match
 nat on $IFEXT1 from $NETINT to any -> ($IFEXT1)
 nat on $IFEXT2 from $NETINT to any -> ($IFEXT2)
 
## SSH abilitato ovunque
 rdr pass on { $IFEXT1 $IFEXT2 $IFINT1 $IFINT2 } inet proto $PROTODEF from any to any port 22 -> lo0 port 22

## Dall'esterno...
 rdr pass on { $IFEXT1 $IFEXT2 } inet proto tcp from any to any port 80  -> lo0 port 555

## su Yesod
 rdr on $IFINT1 inet proto $PROTODEF from $NETINT to $IFINT1 port 53 -> lo0
 rdr on $IFINT1 inet proto $PROTODEF from $NETINT to $IFINT1 port 953 -> lo0
 rdr on $IFINT2 inet proto $PROTODEF from $NETINT to $IFINT2 port 135 -> lo0
 rdr on $IFINT2 inet proto $PROTODEF from $NETINT to $IFINT2 port 631 -> lo0

################ Filtering Rules ###################################################

### $IFEXT1 $IFEXT2 outbound
 pass out log on $IFEXT1 inet from $IFEXT1 to any
 pass out log on $IFEXT2 inet from $IFEXT2 to any

### $IFINT1 $IFINT2 inbound (restrict LAN clients to external machines here)
 pass in on { $IFINT1 $IFINT2 } inet from $NETINT to any

##### INBOUND traffic #####
# SSH allow #
pass in quick on { $IFEXT1 $IFEXT2 $IFINT1 $IFINT2 } proto $PROTODEF from any to any port $SSH keep state

# allow ping (ICMP)
pass in quick on { $IFEXT1 $IFEXT2 } inet proto icmp

# allow traceroute (UDP)
pass in on { $IFEXT1 $IFEXT2 } inet proto udp from any to any port 33433 >< 33626 keep state

# trust IFLOCAL host
pass in quick on $IFLOCAL all
pass out quick on $IFLOCAL all

# anti spoofing
antispoof for { $IFEXT1 $IFEXT2 } inet

# anti fake return-scans
block return-rst out on { $IFEXT1 $IFEXT2 } proto tcp all
block return-rst in on { $IFEXT1 $IFEXT2 } proto tcp all
block return-icmp out on { $IFEXT1 $IFEXT2 } proto udp all
block return-icmp in on { $IFEXT1 $IFEXT2 } proto udp all

# toy with script kiddies scanning us
block in log quick proto tcp flags FUP/WEUAPRSF
block in log quick proto tcp flags WEUAPRSF/WEUAPRSF
block in log quick proto tcp flags SRAFU/WEUAPRSF
block in log quick proto tcp flags /WEUAPRSF
block in log quick proto tcp flags SR/SR
block in log quick proto tcp flags SF/SF

# allow permitted icmp
pass in inet proto icmp all icmp-type $ICMPTYPE keep state
pass in quick on { $IFINT1 $IFINT2 } inet proto icmp all keep state
pass out quick on { $IFEXT1 $IFEXT2 $IFINT1 $IFINT2 } inet proto icmp all keep state

## DHCP
pass in quick on { $IFINT1 $IFINT2 } inet proto $PROTODEF from any port 67:68 to any
pass out quick on { $IFINT1 $IFINT2 } inet proto $PROTODEF from any port 67:68 to any

# allow permitted services
pass in quick on { $IFEXT1 $IFEXT2 } inet proto tcp from any to any port $PORTPUBSVC flags S/SA keep state

##### INBOUND traffic GENERAL#####
### IN INTERNAL
 pass in quick from $NETINT to any keep state
 pass in quick on $GWINTIP1 from any to any keep state
 pass in quick on $GWINTIP2 from any to any keep state
 pass in quick on { $IFINT1 $IFINT2 } all keep state
 pass in quick on { $IFINT1 $IFINT2 } inet from { $IFINT1 $IFINT2 $NETINT } to { $IFINT1 $IFINT2 $NETINT } keep state
 pass in quick from { $IFINT1 $IFINT2 $NETINT } to { $IFINT1 $IFINT2 $NETINT } keep state
 pass in quick from any to { $IFINT1 $IFINT2 } keep state

### IN EXTERNAL
 pass in quick on { $IFEXT1 $IFEXT2 } all keep state
 pass in quick on { $IFEXT1 $IFEXT2 } from any to any keep state
 pass in quick from any to { $IFEXT1 $IFEXT2 } keep state

##### OUTBOUND traffic #####
##### OUTBOUND traffic GENERAL #####
### OUT INTERNAL
 pass out quick from $NETINT to any keep state
 pass out quick on $GWINTIP1 from any to any keep state
 pass out quick on $GWINTIP2 from any to any keep state
 pass out quick on { $IFINT1 $IFINT2 } all keep state
 pass out quick on { $IFINT1 $IFINT2 } inet from { $IFINT1 $IFINT2 } to { $IFINT1 $IFINT2 $NETINT } keep state
 pass out quick from any to { $IFINT1 $IFINT2 } keep state

### OUT EXTERNAL
 pass out quick on { $IFEXT1 $IFEXT2 } from any to any keep state

### OUT BOTH
 pass out quick on { $IFEXT1 $IFEXT2 $IFINT1 $IFINT2 } from { $IFINT1 $IFINT2 $NETINT } to any keep state
 pass out quick from { $IFINT1 $IFINT2 $NETINT } to { $IFEXT1 $IFEXT2 $IFINT1 $IFINT2 $NETINT } keep state

### OUT GENERIC
 pass out quick from any to any keep state
