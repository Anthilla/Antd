<html>
<head><link rel='stylesheet' type='text/css' href='/default.css'>
<title>QOS Class Manager</title>
<script language=Javascript>
function notSaved() {
   document.getElementById("NotSaved").innerHTML="Not Saved";
   document.data.Saved.value="no";
}
function DeleteClass() {
  X=document.data;
  Selected=false;
  if (X.QoSClass!=undefined) {
    if (X.QoSClass.length!=undefined) {
      for (i=0; i<X.QoSClass.length; i++)  {
        if (X.QoSClass[i].checked) {
          Selected=true;
        }
      }
    } else {
      if (X.QoSClass.checked) {
        Selected=true;
      }
    }
  }
  if (!Selected) {
    alert("You should select a class to remove.");
    return;
  }
  if (X.ClassName.value=="DEFAULT") {
    alert("You cannot remove the DEFAULT QoS Class.");
    return;
  }
  
  if (confirm("Are you sure you want to remove the selected class?")) {
    X.Action.value="CMDelete";
    X.submit();
  }
 
}
function CheckMaxGEGuaranteed(Max,MaxUnit,Guaranteed,GuaranteedUnit) {
   if (Max=="" || Guaranteed=="") {
     return true;
   }
   if (MaxUnit=="Kbit/s") {
     KMax=Max*1;
   } else {
     KMax=Max*1024;
   }
   if (GuaranteedUnit=="Kbit/s") {
     KGuaranteed=Guaranteed*1;
   } else {
     KGuaranteed=Guaranteed*1024;
   }
   if (KGuaranteed<=KMax) {
      return true;
   } else {
      alert("The guaranteed bandwidth cannot be greater than the maximum bandwidth.");
      return false;
   }
}

function isValidBandwidth(BW,Unit) {
  if (BW=="") {
    return true;
  }
  if (!(BW.match(/^[0123456789]+[.]{0,1}[0123456789]+$/) || BW.match(/^[0123456789]+$/))) {
     return false;
  }
  if (Unit==0) {
    if (!(BW>=1 && BW<=30000000)) {
      return false;
    }
  } else {
    if (!(BW>=0.001 && BW<=30000)) {
      return false;
    }
  }
  return true;
}
function validateData() {
  X=document.data;
  if (X.Description.value=="") {
    alert("The class description cannot be empty.");
    X.Description.focus();
    return false;
  }
  if (!isValidBandwidth(X.Max.value,X.MaxUnit.selectedIndex)) {
    alert("Invalid maximum bandwidth specification.");
    X.Max.focus();
    X.Max.select();
    return false;
  }
  if (!isValidBandwidth(X.Guaranteed.value,X.GuaranteedUnit.selectedIndex)) {
    alert("Invalid  guaranteed bandwidth specification.");
    X.Guaranteed.focus();
    X.Guaranteed.select();
    return false;
  }
  


  return CheckMaxGEGuaranteed(X.Max.value,X.MaxUnit.value,X.Guaranteed.value,X.GuaranteedUnit.value);
}
function SaveData() {
  X=document.data;
  if (X.ClassName.value=="" || X.Saved.value=="yes") {
    alert("Nothing to save.");
    return;
  }
  if (validateData()) {
    X.Action.value="CMSave";
    X.submit();
  }
}
function ClassSelected() {
  X=document.data;
  X.Action.value="ClassManager";
  X.submit();
}
function ChangeStatus(obj) {
  X=document.data;
  if (obj.value=="DEFAULT") {
    obj.checked=true;
    alert("You cannot disable the DEFAULT QoS Class.");
    return;
  }
  if (obj.checked) {
    X.Status.value="enable";
  } else {
    X.Status.value="disable";
  }
  if (confirm("Are you sure you want to "+X.Status.value+" the selected class?")) {
    X.Action.value="ChangeStatus";
    X.ClassName.value=obj.value;
    X.submit();
  } else {
    obj.checked=!obj.checked;
  }
}



function loaded() {
  X=document.data;
  if (X.ClassName.value!="") {
    document.getElementById("CN").innerHTML="<b>"+X.ClassName.value+"</b>";
    if ("<xvar _MaxUnit>"=="Mbit/s") {
      X.MaxUnit.selectedIndex=1;
    } else {
      X.MaxUnit.selectedIndex=0;
    }
    if ("<xvar _GuaranteedUnit>"=="Mbit/s") {
      X.GuaranteedUnit.selectedIndex=1;
    } else {
      X.GuaranteedUnit.selectedIndex=0;
    }
    if ("<xvar _Priority>"=="0") {
      X.Priority.selectedIndex=2;
    } else {
      if ("<xvar _Priority>"=="1") {
        X.Priority.selectedIndex=1;
      } else {
        X.Priority.selectedIndex=0
      }
    }
    X.DSCP.value="<xvar DSCP>"
    
  } else {
    X.Description.disabled=true;
    X.Max.disabled=true;
    X.MaxUnit.disabled=true;
    X.Guaranteed.disabled=true;
    X.GuaranteedUnit.disabled=true;
    X.Priority.disabled=true;
    X.DSCP.disabled=true;
  }
}
function newClass() {
  ClassName=prompt("Class Name (max. 10 char)","");
  if (ClassName!=undefined) {
    if (!ClassName.match(/^[a-zA-Z0-9_]{1,10}$/)) {
      alert("Class Name not valid.");
      return;
    }
  } else {
   return;    
  }
  var i;
  X=document.data;
  if (X.QoSClass!=undefined) {
    if (X.QoSClass.length!=undefined) {
      for (i=0; i<X.QoSClass.length; i++)  {
        if (X.QoSClass[i].value==ClassName) {
          alert(ClassName+" QoS class already exists."); 
          return;
        }
      }
    } else {
      if (X.QoSClass.value==ClassName) {
        alert(ClassName+" QoS class already exists.");
        return;
      }
    }
  }
  ClassName=ClassName.toUpperCase();
  document.getElementById("CN").innerHTML="<b>"+ClassName+"</b>";
  X.ClassName.value=ClassName;
  if (X.QoSClass!=undefined) {
    if (X.QoSClass.length!=undefined) {
      for (i=0; i<X.QoSClass.length; i++)  {
        if (X.QoSClass[i].checked) {
          X.QoSClass[i].checked=false;
        }
      }
    } else {
      if (X.QoSClass.checked) {
        X.QoSClass.checked=false;
      }
    }
  }
  notSaved();
  X.Description.value="";
  X.Max.value="";
  X.Guaranteed.value="";
  X.MaxUnit.options[1].selected=true;
  X.GuaranteedUnit.options[1].selected=true;
  X.Priority.options[1].selected=true;
  X.DSCP.options[0].selected=true;
  X.Description.disabled=false;
  X.Max.disabled=false;
  X.MaxUnit.disabled=false;
  X.Guaranteed.disabled=false;
  X.GuaranteedUnit.disabled=false;
  X.Priority.disabled=false;
  X.DSCP.disabled=false;
  X.Description.focus();
}

</script>
</head>
<body onload="loaded()">
<form name=data method=post action=kerbynet>
<input type=hidden name=Section value="QoS">
<input type=hidden name=Action value=""><input type=hidden name=STk value=<xvar STk>>
<input type=hidden name=ClassName value="<xvar _ClassName>">
<input type=hidden name=Status value="">
<input type=hidden name=Saved value="yes">
<table width=100%><tr><td><font face="Arial" color="#3030f0" class=Bigger2><b>QoS - CLASS MANAGER</b></font></td><td nowrap width=1% id="NotSaved" style="color: #F00000" class=Bigger1></td><td align=right nowrap width=1%>&nbsp;&nbsp;&nbsp;<input type=button name=Save value=Save onclick="SaveData()">&nbsp;&nbsp;&nbsp;<input type=button value=New onclick="newClass()">&nbsp;<input type=button value=Delete onclick="DeleteClass()">&nbsp;&nbsp;&nbsp;<input type=button value=Close onclick="window.close()"></td></tr></table>
<hr>
<table width=100%>
<tr>
<td class=Bigger1 style="color: #2020C0" id="CN"><b>NOT SELECT</b></td>
<td align=right>Description&nbsp;&nbsp;<input type=text name=Description size=61 maxlength=38 value="<xvar _Description>" onchange="notSaved()"></td>

</tr>
<tr>
<td nowrap>
Priority&nbsp;&nbsp;<select name=Priority onchange="notSaved()"><option value=2>Low</option><option value=1>Medium</option><option value=0>High</option></select>
&nbsp;&nbsp;DSCP&nbsp;<select name=DSCP onchange="notSaved()">
<option value="">
<option value="0">0 BE CS0
<option value="1">1
<option value="2">2
<option value="3">3
<option value="4">4
<option value="5">5
<option value="6">6
<option value="7">7
<option value="8">8 CS1
<option value="9">9
<option value="10">10 AF11
<option value="11">11
<option value="12">12 AF12
<option value="13">13
<option value="14">14 AF14
<option value="15">15
<option value="16">16 CS2
<option value="17">17
<option value="18">18 AF21
<option value="19">19
<option value="20">20 AF22
<option value="21">21
<option value="22">22 AF23
<option value="23">23
<option value="24">24 CS3
<option value="25">25
<option value="26">26 AF31
<option value="27">27
<option value="28">28 AF32
<option value="29">29
<option value="30">30 AF33
<option value="31">31
<option value="32">32 CS4
<option value="33">33
<option value="34">34
<option value="35">35
<option value="36">36
<option value="37">37
<option value="38">38
<option value="39">39
<option value="40">40 CS5
<option value="41">41
<option value="42">42
<option value="43">43
<option value="44">44
<option value="45">45
<option value="46">46 EF
<option value="47">47
<option value="48">48 CS6
<option value="49">49
<option value="50">50
<option value="51">51
<option value="52">52
<option value="53">53
<option value="54">54
<option value="55">55
<option value="56">56 CS7
<option value="57">57
<option value="58">58
<option value="59">59
<option value="60">60
<option value="61">61
<option value="62">62
<option value="63">63
</select>
</td>
<td align=right nowrap>
Maximum&nbsp;&nbsp;<input type=text name=Max size=12 value="<xvar _Max>" onchange="notSaved()">&nbsp;<select name=MaxUnit onchange="notSaved()"><option value="Kbit/s">Kbit/s</option><option value="Mbit/s">Mbit/s</option></select>&nbsp;&nbsp;&nbsp;&nbsp;
Guaranteed&nbsp;&nbsp;<input type=text name=Guaranteed size=12 value="<xvar _Guaranteed>" onchange="notSaved()">&nbsp;<select name=GuaranteedUnit onchange="notSaved()"><option value="Kbit/s">Kbit/s</option><option value="Mbit/s">Mbit/s</option></select></td>
</tr>
</table>
<hr>
<br>
<table width=100% bordercolor=#FFFFFF border=1 cellspacing=0 cellpadding=0>
<tr bgcolor=#8080f0 style='color: #ffffff'><td nowrap width=1%>&nbsp;</td><td nowrap width=1%>&nbsp;<b>Class</b>&nbsp;</td><td>&nbsp;<b>Description</b></td><td nowrap width=1%>&nbsp;<b>Priority</b>&nbsp;</td><td nowrap width=1%>&nbsp;<b>DSCP</b>&nbsp;</td><td nowrap width=1%>&nbsp;<b>Max Bandwidth</b>&nbsp;</td><td nowrap width=1%>&nbsp;<b>Guaranteed</b>&nbsp;</td><td nowrap width=1%><b>On</b></td></tr>
<xvar +qos_cm_list (ClassName)>
</table>
<script>
if (document.data.QoSClass==undefined) {
  document.write("<br><b>&nbsp;&nbsp;&nbsp;No QoS classes defined.</b>");
}
</script>
</form>
</body>
</html>
