<html>
<head><link rel='stylesheet' type='text/css' href='/default.css'>
<title>Static Route Config</title>
<script language=Javascript>
<xinclude ip_utility.inc>
function validateData() {
  if (document.data.Dest.value.replace(/(^\s+)|(\s+$)/g,"")!="" &&!isValidNetwork(document.data.Dest.value,document.data.Netmask.value)) {
    alert(document.data.Dest.value+"/"+document.data.Netmask.value+"  is not a valid destination.");
    document.data.Dest.focus();
    document.data.Dest.select();
    return false;
  }
  if (document.data.Netmask.value.replace(/(^\s+)|(\s+$)/g,"")=="") {
     document.data.Netmask.value=NetmaskFromNetwork(document.data.Dest.value);
  }
  if (document.data.Netmask.value.replace(/(^\s+)|(\s+$)/g,"")!="" && !isValidNetmask(document.data.Netmask.value)) {
    alert("The Netmask is invalid.");
    document.data.Netmask.focus();
    document.data.Netmask.select();
    return false;
  }
  if (document.data.Gateway.value.replace(/(^\s+)|(\s+$)/g,"")!="" && !isValidIP(document.data.Gateway.value)) {
    alert("The Gateway is not a valid IP address.");
    document.data.Gateway.focus();
    document.data.Gateway.select();
    return false;
  }
  return true;
}
function SubmitData() {
  if (validateData()) {
     document.data.Dest.value=document.data.Dest.value.replace(/(^\s+)|(\s+$)/g,"");
     document.data.Netmask.value=document.data.Netmask.value.replace(/(^\s+)|(\s+$)/g,"");
     document.data.Gateway.value=document.data.Gateway.value.replace(/(^\s+)|(\s+$)/g,"");
     if (document.data.Dest.value=="") {
       alert("The Destination cannot be empty.");
       document.data.Dest.focus();
       return;
     }
     if (document.data.Netmask.value=="") {
       alert("The Netmask cannot be empty.");
       document.data.Netmask.focus();
       return;
     }
     if (document.data.Via[0].checked) {
       if (document.data.Gateway.value=="") {
         alert("The Gateway cannot be empty.");
         document.data.Gateway.focus();
         return;
       }
     } else {
       if (document.data.Interface.value=="") {
         alert("You must select an interface.");
         document.data.Interface.focus();
         return;
       }
     }
     document.data.Metric.value=parseInt(document.data.Metric.value);
     if (document.data.Metric.value=="NaN") document.data.Metric.value=0;
     if (!(document.data.Metric.value>=-32768 && document.data.Metric.value<=32767)) {
       alert("The Metric must be included in the range: -32768 32767");
       document.data.Metric.focus();
       document.data.Metric.select();
       return false;
     }
     document.data.submit();
  }
}
var oldNetmask,oldInterface,oldGW;
function HostType() {
  X=document.data;
  oldNetmask=X.Netmask.value;
  X.Netmask.value="255.255.255.255";
  X.Netmask.disabled=true;
}
function NetworkType() {
  X=document.data;
  if (oldNetmask!=undefined) X.Netmask.value=oldNetmask;
  X.Netmask.disabled=false;
}
function ViaGW() {
  X=document.data;
  if (oldGW!=undefined) X.Gateway.value=oldGW;
  oldInterface=X.Interface.value;
  X.Interface.value="";
  X.Gateway.disabled=false;
  X.Interface.disabled=true;

}
function ViaInterface() {
  X=document.data;
  if (oldInterface!=undefined) X.Interface.value=oldInterface;
  oldGW=X.Gateway.value;
  X.Gateway.value="";
  X.Gateway.disabled=true;
  X.Interface.disabled=false;
}
function loaded() {
  if (document.data.RouteType[0].checked) {
    NetworkType();   
  } else {
    HostType();
  }
  if (document.data.Via[0].checked) {
    ViaGW();
  } else {
    ViaInterface();
    document.data.Interface.value="<xvar Interface>";
  }

  window.focus();
}
</script>
</head>
<body onload="loaded()">
<form name=data method=post action=kerbynet>
<input type=hidden name=Section value="Router">
<input type=hidden name=Action value="<xvar Action>"><input type=hidden name=STk value=<xvar STk>>
<input type=hidden name=Entry value="<xvar Entry>">
<table width=100%><tr>
<td><font face="Arial" color="#0000f0" class=Bigger1><b>STATIC ROUTE</b></font></td>
<td align=right><font class=Smaller1 color=#009090><input type=radio name=RouteType value=Net onclick="NetworkType()" <xvar NetChecked>>Network <input type=radio name=RouteType value=Host onclick="HostType()" <xvar HostChecked>>Host</font></td>
</tr></table>
<hr>
<table width=100% style="color: #0000A0" border= border=1>
<tr><td>Destination</td><td><input type=text name=Dest value="<xvar Dest>" size=15 maxlength=15 onchange="validateData()" style="font-family: courier; color: #000080"></td>
<td>Netmask</td><td><input type=text name=Netmask value="<xvar Netmask>" size=15 maxlength=15 onchange="validateData()" style="font-family: courier; color: #000080"></td></tr>
<tr>
<td><font class=Smaller1 color=#009090><input type=radio name=Via value=GW onclick="ViaGW()" <xvar GWChecked>>Gateway<br><input type=radio name=Via value=IF onclick="ViaInterface()" <xvar IFChecked>>Interface</font></td>
<td>Gateway<br><input type=text name=Gateway value="<xvar Gateway>" size=15 maxlength=15 onchange="validateData()" style="font-family: courier; color: #000080"></td>
<td>Metric<br><input type=text name=Metric value="<xvar Metric>" size=11 maxlength=11 onchange="validateData()" style="font-family: courier; color: #000080"></td>
<td>Interface<br><select name=Interface style="color: #000080">
<option value="">-------------</option>
<xvar !availableInterfaces>
</td>
</tr>
</table>
<br>
<center>
<hr>
<input type=button value=" OK " onclick="SubmitData()" style="font-family: courier; color: #0000A0">
<input type=button value="Cancel" onclick="window.close()" style="font-family: courier; color: #0000A0">
</center>
</form>
</body>
</html>
