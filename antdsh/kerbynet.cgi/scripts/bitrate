#!/usr/bin/perl
use warnings;
use Scalar::Util qw(looks_like_number);
sub bits2Xbits {
  my $bits=shift;
  if($bits > 1000000000) { 
    $bits = ( sprintf( "%0.2f", $bits/1000000000 )). " Gbit";                   
  } elsif ($bits > 1000000) {       
    $bits = ( sprintf( "%0.2f", $bits/1000000 )). " Mbit"; 
  } elsif ($bits > 1000) {
    $bits = ( sprintf( "%0.2f", $bits/1000 )). " Kbit"; 
  } else { 
    $bits = sprintf( "%0.2f", $bits ). " bit";
  }
  return $bits;
}
sub bytes2Xbytes {
  my $bytes=shift;
  if($bytes > 1000000000) { 
    $bytes = ( sprintf( "%0.2f", $bytes/1000000000 )). " GB";                   
  } elsif ($bytes > 1000000) {       
    $bytes = ( sprintf( "%0.2f", $bytes/1000000 )). " MB"; 
  } elsif ($bytes > 1000) {
    $bytes = ( sprintf( "%0.2f", $bytes/1000 )). " KB"; 
  } else { 
    $bytes = sprintf( "%0.2f", $bytes ). "  B";
  }
  return $bytes;
}


  
  open PREV,"/tmp/bitrate-prev";
  while ($entry=<PREV>) {
    ($Proto,$sIP,$dIP,$sPort,$dPort,$RX,$TX) = split(':',$entry);
    $PTraffic{"$Proto:$sIP:$dIP:$sPort:$dPort"}=$RX+$TX; 
  }
  close PREV;
  open PREV,">","/tmp/bitrate-prev";


  open CONNTRACK,"conntrack -L 2>/dev/null|awk -F= ' /^(udp|tcp)/ {printf \"%s:%s:%s:%s:%s:%s:%s\\n\",substr(\$1,0,index(\$1,\" \")-1),substr(\$2,0,index(\$2,\" \")-1),substr(\$3,0,index(\$3,\" \")-1),substr(\$4,0,index(\$4,\" \")-1),substr(\$5,0,index(\$5,\" \")-1),substr(\$7,0,index(\$7,\" \")-1),substr(\$13,0,index(\$13,\" \")-1)} /^icmp/ {printf \"%s:%s:%s:type=%s:code=%s:%s:%s\\n\",substr(\$1,0,index(\$1,\" \")-1),substr(\$2,0,index(\$2,\" \")-1),substr(\$3,0,index(\$3,\" \")-1),substr(\$4,0,index(\$4,\" \")-1),substr(\$5,0,index(\$5,\" \")-1),substr(\$8,0,index(\$8,\" \")-1),substr(\$15,0,index(\$15,\" \")-1)} /^unknown/ {printf \"%s:%s:%s:::%s:%s\\n\",substr(\$1,0,index(\$1,\" \")-1),substr(\$2,0,index(\$2,\" \")-1),substr(\$3,0,index(\$3,\" \")-1),substr(\$5,0,index(\$5,\" \")-1),substr(\$9,0,index(\$9,\" \")-1)}'|";



  $Throughput=0;
  while ($entry=<CONNTRACK>) {
    ($Proto,$sIP,$dIP,$sPort,$dPort,$RX,$TX) = split(':',$entry);
    if ($dIP ne "127.0.0.1") {
      chomp($TX);
      if (looks_like_number($TX) && looks_like_number($RX)) {
        print PREV "$Proto:$sIP:$dIP:$sPort:$dPort:$RX:$TX\n";
        if (defined ($PBytes=$PTraffic{"$Proto:$sIP:$dIP:$sPort:$dPort"})) {
           if ($RX+$TX-$PBytes > 0) {
             $Throughput+=$RX+$TX-$PBytes;
	   }
        } else {
           $Throughput+=$RX+$TX;
        }
      }
    }
  }
  close PREV;
  close CONNTRACK;
  
  open TS,"<","/tmp/bitrate-ts";
  $PTS=<TS>;
  close TS;
  if (!looks_like_number($PTS)) {
    $PTS=0;
  }
  $NOW=time();
  
  $DELTA=$NOW-$PTS;
  open TS,">","/tmp/bitrate-ts";
  print TS "$NOW";
  close TS;
  open READ,"</proc/sys/net/netfilter/nf_conntrack_count";
  $CONN=<READ>;
  chop($CONN);
  open SHELL,"uptime|awk -F'average:' '{print \$2}'|awk -F, '{print \$1}'|";
  $LOAD=<SHELL>*100;
  close SHELL;
  open SHELL,"/root/kerbynet.cgi/scripts/cpus|";
  $LOAD=int($LOAD/<SHELL>);
  close SHELL;
  close READ;
  $Bitrate=$Throughput*8/$DELTA;
  printf "%s/s (Connections: %s Load: %s%%)\n",bits2Xbits($Bitrate),$CONN,$LOAD;
