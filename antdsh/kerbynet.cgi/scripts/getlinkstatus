#!/bin/sh
. /etc/kerbynet.conf
INTERFACE="$1"
MODE="$2"
if [ -z "$INTERFACE" ] ; then
   echo "No interface specified." 1>&2
   exit 1
fi
if [ -d "$REGISTER/system/net/interfaces/$INTERFACE/WiFi" ] ; then
  if ! ip link show dev $INTERFACE | grep $INTERFACE | grep -q -w UP ; then
     if [ "$MODE" != TXT ] ; then
       echo "<font color=#ff0000>Down</font>"
     else
       echo "Down"
     fi
     exit
  fi
  TMP=/tmp/link_info$$
  iwconfig $INTERFACE > $TMP 2>/dev/null
  AP=`grep Mode: $TMP |grep Mode: |sed -r 's/.*Access Point: (.*)/\1/' |sed 's/ //g' | sed 's/://g'`
  echo "$AP" | grep -q Not-Associated && AP="NOT ASSOCIATED"
  FREQ=`iwlist $INTERFACE channel|grep Current | sed -r 's/.*Current Frequency=(.*)/\1/'`
  if grep -q Managed $TMP ; then
    OTHER="Rate:`iwlist $INTERFACE rate |grep Current | sed -r 's/.*Current Bit Rate=(.*)/\1/' | sed -r 's/ //g'` Quality:`grep 'Link Quality' $TMP | sed -r 's/.*Link Quality=(.*)Signal.*/\1/' |sed 's/ //g'`"
  else
    OTHER="Tx-Power:`iwconfig $INTERFACE |grep Tx-Power | sed -r 's/.*Tx-Power[:=](.*)/\1/' | sed 's/ //g' | sed 's/\t/ /g'`"
    AP=`grep IEEE $TMP |awk '{print $3}'`;
  fi
  if [ "$MODE" != TXT ] ; then
    if [ "$AP" == "Not-Associated" -o "$AP" == "00:00:00:00:00:00" ] ; then
      echo "<font color=#FF6600>AP:$AP&nbsp;&nbsp;Freq:$FREQ&nbsp;&nbsp;$OTHER</font>"
    else
      echo "AP:$AP&nbsp;&nbsp;Freq:$FREQ&nbsp;&nbsp;$OTHER"
    fi
  else
    echo "Access Point: $AP $FREQ"  
  fi
  rm -f "$TMP" 2> /dev/null
  exit
fi
if [ "${INTERFACE:0:3}" == ppp ] ; then
  if route -n |grep -q $INTERFACE ; then 
     PTP=`ifconfig $INTERFACE |grep "inet addr:" |awk -F"Mask:" '{print $1}'`
     if [ "$MODE" != TXT ] ; then
       echo "Connected&nbsp;&nbsp;&nbsp;<font class=Smaller1 color=#606060>$PTP</font>"
     else
       echo "Connected"
     fi
  else
     if [ -r "$REGISTER/system/net/interfaces/$INTERFACE/ETHERNET" ] ; then
       if ps -ef |grep pppoe-connect|grep -q $INTERFACE ; then
         if [ "$MODE" != TXT ] ; then
           echo "<font color=#FF6600>Connecting to PPPoE Server</font>"
         else
           echo "Connecting to PPPoE Server"
         fi
       else
         if [ "$MODE" != TXT ] ; then
           echo "<font color=#ff0000>Down</font>"
         else
           echo "Down"
         fi
       fi
     else
       if ps -ef |grep 3Gconnect |grep -q $INTERFACE ; then
         if [ "$MODE" != TXT ] ; then
           echo "<font color=#FF6600>Connecting to Mobile Network</font>"
         else
           echo "Connecting to Mobile Network"
         fi
       else
         if [ "$MODE" != TXT ] ; then
           echo "<font color=#ff0000>Down</font>"
         else
           echo "Down"
         fi
       fi
     fi
  fi
  if [ "$MODE" != TXT ] ; then
    if [ -r "$REGISTER/system/net/interfaces/$INTERFACE/ETHERNET" ] ; then 
      echo "&nbsp;&nbsp;<font color=#606060 class=Smaller1>(PPPoE: `cat $REGISTER/system/net/interfaces/$INTERFACE/ETHERNET 2>/dev/null`)</font>"
    else
      echo "&nbsp;&nbsp;<font color=#606060 class=Smaller1>(2G/3G: `cat $REGISTER/system/net/interfaces/$INTERFACE/TTY 2>/dev/null`)</font>"
    fi
  fi
  exit
fi
INTSYS="/sys/class/net/$INTERFACE"
if [ ! -d "$INTSYS" ] ; then
   echo "Interface doesn't exist." 1>&2
   exit 2
fi
if [ "${INTERFACE:0:6}" == BRIDGE ] ; then
  if [ "`brctl show |grep $INTERFACE |awk '{print $3}'`" == no ] ; then
    STP=Disabled
  else
    STP=Enabled
  fi
  STP="<font color=#606060 class=Smaller1>(STP: $STP)</font>"
  if ! ip link show dev $INTERFACE | grep $INTERFACE | grep -q -w UP ; then
     if [ "$MODE" != TXT ] ; then
       echo "<font color=#ff0000>Down</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $STP"
     else
       echo "Down"
     fi
     exit
  fi
  TMP=/tmp/link_info$$
  brctl showstp  $INTERFACE > $TMP
  if grep -q -i listening $TMP ; then
    if [ "$MODE" != TXT ] ; then
      echo "<font color=#FF6600>Listening State</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $STP"
    else
      echo "Listening"
    fi
  else
    if grep -q -i learning $TMP ; then
      if [ "$MODE" != TXT ] ; then
        echo "<font color=#FF6600>Learning State</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $STP"
      else
        echo "Learning"
      fi
    else
      if grep -q -i forwarding $TMP ; then
        if [ "$MODE" != TXT ] ; then
          echo "Forwarding State&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $STP"
        else
          echo "Forwarding"
        fi
      else
        if [ "$MODE" != TXT ] ; then
          echo "<font color=#ff0000>No port is forwarding</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $STP" 
        else
          echo "No port is forwarding"
        fi
      fi    
    fi
  fi
  rm -f "$TMP"
  exit
fi


if [ "${INTERFACE:0:4}" == BOND ] ; then
  if ! ip link show dev $INTERFACE | grep $INTERFACE | grep -q -w UP ; then
     if [ "$MODE" != TXT ] ; then
       echo "<font color=#ff0000>Down</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $STP"
     else
       echo "Down"
     fi
     exit
  fi
  TMP=/tmp/link_info$$
  cat /proc/net/bonding/$INTERFACE > $TMP
  BONDSTATUS=down
  #INTSTATUS=`awk -F": " '/Slave Interface/{I=$2;} /MII Status/ {if (I!="") if ($2=="up") printf("%s:%s ",I,$2); else printf("<font color=#ff0000>%s:%s</font> ",I,$2);}' < $TMP`
  for S in `cat $REGISTER/system/net/interfaces/$INTERFACE/BondList 2>/dev/null` ; do
#    if ifconfig $S 2>/dev/null |grep RUNNING ; then
    if grep -A3 -w "Slave Interface: $S" /proc/net/bonding/$INTERFACE |grep "MII Status:" |grep -q -w up ; then
      BONDSTATUS=up
      ST=$S:Up
    else
      if [ "$MODE" != TXT ] ; then
        ST="<font color=#ff2020>$S:Down</font>"
      else
        ST="$S:Down"
      fi
    fi
    INTSTATUS="$INTSTATUS $ST"
  done

  if [ "$BONDSTATUS" == up ] ; then
    if [ "$MODE" != TXT ] ; then
      echo "<font>Link UP <font color=#404040>--</font> $INTSTATUS</font>"
    else
      echo "Link UP -- $INTSTATUS"
    fi
  else
    if [ "$MODE" != TXT ] ; then
      echo "<font color=#ff0000>Link DOWN</font>  <font color=#404040>--</font> $INTSTATUS"
    else
      echo "Link DOWN -- $INTSTATUS"
    fi
  fi
  rm -f "$TMP"
  exit
fi
if [ "${INTERFACE:0:3}" != VPN ] ; then 
  if ! ip link show dev $INTERFACE | grep $INTERFACE | grep -q -w UP ; then
     if [ "$MODE" != TXT ] ; then
       echo "<font color=#ff0000>Down</font>"
     else
       echo Down
     fi
     exit
  fi
  TMP=/tmp/link_info$$
  if /usr/local/sbin/ethtool $INTERFACE > $TMP ; then
     if grep -q "Link detected: yes" $TMP ; then
        SPEED=`grep "Speed:" $TMP |cut -d: -f2`
        DUPLEX=`grep "Duplex:" $TMP |cut -d: -f2`
        echo "$SPEED$DUPLEX Duplex"
     else
        if [ "$MODE" != TXT ] ; then
          echo "<font color=#ff0000>No link detected</font>"
        else
          echo " No link detected"
        fi
     fi
  else
     echo "Unknown link status"
  fi
  rm -f "$TMP" 2> /dev/null
else
  if [ "$INTERFACE" == VPN99 ] ; then
    if ps -e |grep -w -q vpn ; then
       if [ "$MODE" != TXT ] ; then
         echo "Listening for Road Warrior connections"
       else
         echo "Listening for Road Warrior connections"
       fi
    else
       if [ "$MODE" != TXT ] ; then
         echo "<font color=#ff6600>Connections from Road Warrior clients disabled</font>"
       else
         echo "Connections from Road Warrior clients disabled"
       fi

    fi
    exit
  fi
  PID="`ps -ef |grep -w openvpn |grep " --dev $1 " |awk '{print $2}'`"
  if [ -z "$PID" ] ; then
    if [ "`cat $REGISTER/system/net/interfaces/$1/STATUS 2>/dev/null`" != up ] ; then
      if [ "$MODE" != TXT ] ; then
        echo "<font color=#ff0000>Down</font>"
      else
        echo Down
      fi
    else
      if ! $SCRIPTS/vpn_checknbgw $1 ; then
        T="Unable to connect using the selected Gateway"
        if [ "$MODE" != TXT ] ; then
          echo "<font color=#ff6600>$T</font>"
        else
          echo "$T"
        fi
      else
        if [ "$MODE" != TXT ] ; then
          echo "<font color=#ff0000>VPN process has not started</font>"
        else
          echo "VPN process has not started"
        fi
      fi
    fi
    exit 
  else
    NUM=${INTERFACE:3:2}
    if [ "${NUM:0:1}" == 0  ] ; then
       NUM=${NUM:1:1}
    fi
    PORT=`$SCRIPTS/getkey /system/net/interfaces/$INTERFACE/TUNNEL/Port`
    PROTO=`$SCRIPTS/getkey /system/net/interfaces/$INTERFACE/TUNNEL/Proto`
    MGT=$[34000+$NUM]
    STATUS=`echo "log all" | nc -w1 127.0.0.1 $MGT |tac |awk '/process restarting/ {print "No"; exit} /Peer Connection Initiated with/ {print ; exit}'`
    if  echo $STATUS | grep -q "Peer Connection Initiated with"   ; then
       STATUS=`echo $STATUS | awk -F"," '{print $3}'`
       X509=`echo $STATUS | awk '{print $1}'`
       REMOTE=`echo $STATUS | awk '{print $6}'|awk -F: '{print $1}'`
       [ -z "$REMOTE" ] && REMOTE=`echo $STATUS | awk '{print $5}'|awk -F: '{print $1}'` && X509=""
       if [ "$MODE" != TXT ] ; then
         echo "Connected to $REMOTE:$PORT ($PROTO)  <font class=Smaller1>$X509</font>"
       else
         echo "Connected to $REMOTE:$PORT ($PROTO) $X509"
       fi
    else
       REMOTEIP=`$SCRIPTS/getkey /system/net/interfaces/$INTERFACE/TUNNEL/RemoteIP`
       if [ "$MODE" != TXT ] ; then
         echo "<font color=#FF6600>Connecting to remote peer $REMOTEIP:$PORT ($PROTO)</font>"
       else
         echo "Connecting to remote peer $REMOTEIP:$PORT ($PROTO)"
       fi
    fi
  fi
fi

