#!/bin/sh
. /etc/kerbynet.conf
CONFIG=$REGISTER/system/net/nb/Gateways
cd $CONFIG
function set_gwmark {
  xGW="$1"
  INTF=`cat $xGW/Interface 2>/dev/null`
  IP=`cat $xGW/IP 2>/dev/null`

  # In the post routing phase, we want to get the the routing realm used for new
  # connections and save it in the connection. First setp here is to get the mark
  # and put it on the packet. Our caller will emit the code to save the marks to
  # the connection.
  if ! iptables -t mangle -L NB_CT_POST -n | grep -q -w `echo 1$xGW |awk '{printf ("0x%x",$0)}'` ; then
     [ "`cat $xGW/Enabled 2>/dev/null`" = yes ] && iptables -t mangle -I NB_CT_POST 1 -m realm --realm 1$xGW -j MARK --set-mark 1$xGW
   else
     [ "`cat $xGW/Enabled 2>/dev/null`" != yes ] && iptables -t mangle -D NB_CT_POST -m realm --realm 1$xGW -j MARK --set-mark 1$xGW
  fi

  # Make the entry in the statistics chain so we can track how much traffic went
  # over each gateway
  if ! iptables -t mangle -L NB_STAT -n | grep -q -w `echo 1$xGW |awk '{printf ("0x%x",$0)}'` ; then
     [ "`cat $xGW/Enabled 2>/dev/null`" = yes ] && iptables -t mangle -I NB_STAT 1 -m mark --mark 1$xGW
  else
     [ "`cat $xGW/Enabled 2>/dev/null`" != yes ] && iptables -t mangle -D NB_STAT -m mark --mark 1$xGW
  fi
}
GW="$1"
if [ -z "$GW" ] ; then
  GW=`ls -d ?? 2>/dev/null`
  iptables -t mangle -F NB_CT_POST
  iptables -t mangle -F NB_STAT
  for G in $GW ; do
    set_gwmark $G
  done
  iptables -t mangle -D NB_CT_POST -j CONNMARK --save-mark 2> /dev/null
  iptables -t mangle -A NB_CT_POST -j CONNMARK --save-mark
else
  set_gwmark $GW
fi

