#!/bin/sh
. /etc/kerbynet.conf
CONFIG="$REGISTER/system/cp/Auth"
cd "$CONFIG" || exit 1
killall -w CapPortAS 2>/dev/null
killall -w shibd 2>/dev/null
iptables -F CapPortIdP 2>/dev/null
iptables -F CapPortIdP80 -t nat 2>/dev/null
iptables -F CapPortIdP443 -t nat 2>/dev/null
iptables -F CapPortCRL 2>/dev/null
iptables -F CapPortCRL80 -t nat 2>/dev/null
rm -f "$REGISTER/system/cp/Auth/Shibboleth/var/run/shibboleth/shibd.sock"
ENABLED=`cat Enabled 2>/dev/null`
if [ "$ENABLED" == yes -o "`cat $REGISTER/system/cp/Enabled 2>/dev/null`" = yes ] ; then
  export PATH="/usr/local/ssl/bin:/opt/shibboleth-sp/sbin/:$PATH"
  export QUERY_STRING="onlyrender"
  UNLOCKCRL=`cat UnlockCRL 2>/dev/null`
  if [ "$UNLOCKCRL" == yes ] ; then
     iptables -N CapPortCRL 2>/dev/null
     iptables -t nat -N CapPortCRL80 2>/dev/null
     $SCRIPTS/cp_create_CRL_ipt 2>/dev/null
     ( sleep 67 ; $SCRIPTS/cp_mkfreeCRL 2>/dev/null ) &


  fi 
  SHIBENABLED=`cat Shibboleth/Enabled 2>/dev/null`
  if [ "$SHIBENABLED" == yes ] ; then
     EID=$( cat /var/register/system/cp/Auth/Shibboleth/EntityID 2>/dev/null |sed -r 's/\//\\\//g' )

     sed "s/.*<ApplicationDefaults[ ]*entityID=\".*\".*/\<ApplicationDefaults entityID=\"$EID\"/g"< /etc/shibboleth/shibboleth2.xml > /tmp/shibboleth2.xml
     mv /tmp/shibboleth2.xml /etc/shibboleth/shibboleth2.xml
     $SCRIPTS/shib_x509_prepare
     shibd
     iptables -N CapPortIdP 2>/dev/null
     iptables -t nat -N CapPortIdP80 2>/dev/null
     iptables -t nat -N CapPortIdP443 2>/dev/null

     $SCRIPTS/shib_create_ipt 2>/dev/null
     ( sleep 57 ; $SCRIPTS/shib_mkwhitelist 2>/dev/null ) &
  fi

  if [ "`cat Shibboleth/Mode 2>/dev/null`" == Auto -a "`cat Shibboleth/Enabled 2>/dev/null`" == yes ] && pidof shibd 2>/dev/null >/dev/null ; then
    HTTPCONF=cp_as-httpd.shib
  else
    if [ "`cat NoSSL 2>/dev/null`" == yes ] ; then
      HTTPCONF=cp_as-httpd.nossl
    else
      HTTPCONF=cp_as-httpd.ssl
    fi
  fi
  if [ "`cat $REGISTER/system/cp/Auth/UseCN 2>/dev/null`" == yes ] ; then
    CN=`openssl x509 -in $REGISTER/system/cp/Auth/TLS/cert.pem  -noout -subject |awk -F"CN=" '{print $2}' | awk -F"/" '{print $1}'`
    if [ -n "$CN" ] ; then
      
      render "$TEMPLATE/$HTTPCONF" | sed "s/%{SERVER_ADDR}/$CN/g" > /var/register/system/cp/Auth/cp_as-httpd
    else
      render "$TEMPLATE/$HTTPCONF"  > /var/register/system/cp/Auth/cp_as-httpd
    fi
  else
    render "$TEMPLATE/$HTTPCONF"  > /var/register/system/cp/Auth/cp_as-httpd
  fi
  if CapPortAS -f CapPortAS.conf 2>/tmp/CapPortAS.err ; then 
    if [ "`cat $REGISTER/system/cp/Auth/Enabled 2>/dev/null`" == yes ] ; then
    logger -t "CaptivePortal" "AS: Success: Captive Portal Authentication Server started"
    $SCRIPTS/runscript cpauth >/dev/null
    fi
  else
    logger -t "CaptivePortal" "AS: ERROR: Captive Portal Authentication Server failed to start: `cat /tmp/CapPortAS.err`"
    exit 10
  fi
else
  logger -t "CaptivePortal" "AS: Captive Portal Authentication Server is disabled"
fi
