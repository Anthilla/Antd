#!/bin/sh
. /etc/kerbynet.conf
iptables -N SYS_INPUT 2> /dev/null
iptables -F SYS_INPUT
iptables -N SYS_OUTPUT 2> /dev/null
iptables -F SYS_OUTPUT
iptables -N SYS_DNS 2> /dev/null
iptables -F SYS_DNS
iptables -N SYS_GUI 2> /dev/null
iptables -A SYS_INPUT -i lo -j ACCEPT
REMOTEPT=`cat $REGISTER/system/cp/Auth/Port 2>/dev/null`
[ -z "$REMOTEPT" ] && REMOTEPT=12080
REMOTESSL=$((REMOTEPT+1))
GWPORT=$((REMOTEPT+2))
GWPORTSSL=$((REMOTEPT+3))
if [ "`cat $REGISTER/system/cp/Enabled 2>/dev/null`" = yes ] ; then
  iptables -A SYS_INPUT -p tcp --dport 55559 -j CapProxyIn 2>/dev/null
  iptables -A SYS_OUTPUT -p tcp --sport 55559 -j CapProxyOut 2>/dev/null
  CPINTS=`cat /var/register/system/cp/Interface 2>/dev/null`
  for CPINT in $CPINTS ; do
    VLAN=`echo $CPINT | awk -F. '{print $2}'`
    MODE=Routed
    if [ -z "$VLAN" ] ; then
      [ -f "$REGISTER/system/net/interfaces/$CPINT/Bridge/Name" ] && MODE=Bridged
    else
      CPINT=`echo $CPINT | awk -F. '{print $1}'`
      [ -f "$REGISTER/system/net/interfaces/$CPINT/VLAN/$VLAN/Bridge/Name" ] && MODE=Bridged
    fi
    [ -n "$VLAN" ] && CPINT=$CPINT.$VLAN
    if [ "$MODE" = Bridged ] ; then
      iptables -A SYS_INPUT -p tcp --dport $REMOTEPT:$GWPORTSSL -mphysdev --physdev-in "$CPINT" -j ACCEPT
    else
      iptables -A SYS_INPUT -i "$CPINT" -p tcp --dport $REMOTEPT:$GWPORTSSL -j ACCEPT
    fi
  done
  iptables -A SYS_INPUT -p tcp --dport $REMOTEPT:$GWPORTSSL -j DROP
fi
iptables -A SYS_INPUT -p udp --sport 53 -m state --state ESTABLISHED -j ACCEPT
iptables -A SYS_INPUT -p tcp --sport 53 -m state --state ESTABLISHED -j ACCEPT
DNS_AUTHORIZED="`$SCRIPTS/dns_allow-query`"
$SCRIPTS/dns_iptables "$DNS_AUTHORIZED"
iptables -A SYS_INPUT -p udp --dport 53 -j SYS_DNS
iptables -A SYS_INPUT -p tcp --dport 53 -j SYS_DNS
iptables -A SYS_INPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT
iptables -A SYS_INPUT -p tcp --sport 8245 -m state --state ESTABLISHED -j ACCEPT
iptables -A SYS_INPUT -p udp --sport 123 -m state --state ESTABLISHED -j ACCEPT

iptables -A SYS_INPUT -j RETURN

iptables -A SYS_OUTPUT -o lo -j ACCEPT
iptables -A SYS_OUTPUT -p udp --dport 53  -j ACCEPT
iptables -A SYS_OUTPUT -p tcp --dport 80  -j ACCEPT
iptables -A SYS_OUTPUT -p tcp --dport 8245  -j ACCEPT
iptables -A SYS_OUTPUT -p udp --dport 123  -j ACCEPT
iptables -A SYS_OUTPUT -j RETURN
