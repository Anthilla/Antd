#!/bin/sh
. /etc/kerbynet.conf
cat <<EOF
You should use this procedure only if you want to create a bridge
and you cannot use the web interface to do it.
You will have to select an ethernet interface to add to the bridge.
The IP and VLAN configuration of the selected interface will be
automatically migrate to the new bridge. 

EOF

echo -n "Are you sure you want to continue (y/n)? "
read -n1 Y
echo
Y=`echo $Y | awk '{print toupper($0)}'`
if [ "$Y" == "Y" ] ; then
  cd $REGISTER/system/net/interfaces/
  ETHERNETS=`ls -d ETH?? 2>/dev/null`
  echo
  I=0
  for E in $ETHERNETS ; do
    if ! [ -r "$E/Bridge/Name" ] ; then
      I=$((I+1))
      echo "<$I> $E -`$SCRIPTS/getintdesc $E`"
      ETHs[$I]=$E
    fi
  done
  echo
  if [ $I != 0 ] ; then
    S=0
    while [ "$S" -lt 1 -o "$S" -gt $I ] ; do
      echo -n "Select an ethernet interface (1-$I): "
      read S
      S=`echo "$S" | sed 's/[^[:digit:]]//g'`
      [ -z "$S" ] && S=0
    done
    LAST=`ls -d BRIDGE* 2>/dev/null |tail -1`
    if [ -z "$LAST" ] ; then
      NEW=00
    else
      LAST="${LAST:6:2}"
      if [ "${LAST:0:1}" == 0 ] ; then
         LAST="${LAST:1:1}"
      fi
      NEW="$((LAST+1))"
      if [ "$NEW" -lt 10 ] ; then
        NEW=0$NEW
      fi
    fi
    BRIDGE="BRIDGE$NEW"
    if /root/kerbynet.cgi/scripts/makebridge $BRIDGE 'Bridge Interface' "${ETHs[$S]}" '' 'DEFAULT' 'DEFAULT' 'DEFAULT' 'DEFAULT' 'DEFAULT' 2>/dev/null ; then
      echo "$BRIDGE(${ETHs[$S]}) successfully created."
      cp -a ${ETHs[$S]}/IP ${ETHs[$S]}/VLAN $BRIDGE 2>/dev/null
      $SCRIPTS/setinterface $BRIDGE
      $SCRIPTS/setvlans $BRIDGE
      echo "VLAN and IP configuration  ${ETHs[$S]} -> $BRIDGE completed."
      echo
      echo "WARNING: the bridge will be in the forwarding state within a few seconds."
      
    else
      echo "Bridge creation error"
    fi
  else
    echo "No ethernet interface available to add to a bridge"
  fi
  echo
  echo -n "Press any key to return to the Command Menu."
  read -n1
  
fi
