#!/bin/bash
. /etc/kerbynet.conf
. $SCRIPTS/net.inc
. $SCRIPTS/wifi.inc
OPT="$1"
echo "Detecting ethernet interfaces..."
CONFIG="$REGISTER/system/net/interfaces"
cd /sys/class/net
INTERFACES=`ls -d eth[0123456789] eth[0123456789][0123456789] 2>/dev/null`
# setup normal interfaces 
for i in $INTERFACES ; do
  MAC=`getmac $i`
  if [ "$MAC" != 000000000000 -a "$MAC" != "" ] ; then
    if ls $CONFIG/*/MAC/$MAC 2>/dev/null >/dev/null ; then
      NAME=`echo $CONFIG/*/MAC/$MAC |cut -d/ -f7`
      DESCRIPTION=`$SCRIPTS/getintdesc $i`
      echo $DESCRIPTION > $CONFIG/$NAME/Description
      ip link set down dev $i
      ip link set name $NAME dev $i
      echo $NAME : $DESCRIPTION
    fi
  fi
done
# setup ETHXX interfaces stored in the profile
cd $CONFIG
INTERFACES=`ls -d ETH[0123456789][0123456789] 2>/dev/null`
for I in $INTERFACES ; do
  if ! [ -d $CONFIG/$I/WiFi/ ] ; then 
    if ! ( cd /sys/class/net ; ls -d ETH[0123456789][0123456789] 2>/dev/null ) | grep -q -w $I ; then
      if [ "${I:0:4}" == ETH0 ] ; then
        T="${I:4}"
      else
        T="${I:3:2}"
      fi
      eth="eth$T"
      if ! ls -d /sys/class/net/$eth 2>/dev/null >/dev/null ; then
        eth=`(cd /sys/class/net ; ls -d eth[0123456789] eth[0123456789][0123456789] 2>/dev/null) | head -1`
      fi
      if ! [ -z "$eth" ] ; then
        MAC=`getmac $eth`
        if [ "$MAC" != 000000000000 -a "$MAC" != "" ] ; then
          mkdir -p $CONFIG/$I/MAC 2>/dev/null
          rm -f $CONFIG/$I/MAC/*
          touch $CONFIG/$I/MAC/$MAC
          DESCRIPTION=`$SCRIPTS/getintdesc $eth`
          echo $DESCRIPTION > $CONFIG/$I/Description
          ip link set down dev $eth
          ip link set name $I dev $eth
          echo "$I (hardware changed) : $DESCRIPTION"
        fi
      fi
    fi
  fi
done   
cd /sys/class/net
# setup the interfaces that not handled on other cicles
INTERFACES=`ls -d eth[0123456789] eth[0123456789][0123456789] 2>/dev/null`
NUM=0
for i in $INTERFACES ; do
  MAC=`getmac $i`
  if [ "$MAC" != 000000000000 -a "$MAC" != "" ] ; then
    ETHs=`(cd $CONFIG ; ls -d ETH[0123456789][0123456789] 2>/dev/null)`
    NAME=""
    while [ -z "$NAME" ] ; do
      if [ "$NUM" -lt 10 ] ; then
        T="ETH0$NUM"
      else
        T="ETH$NUM"
      fi     
      if ! echo "$ETHs" | grep -q -w "$T" ; then
        NAME="$T"
      fi
      NUM=$((NUM+1))
    done
    mkdir -p $CONFIG/$NAME/MAC
    touch $CONFIG/$NAME/MAC/$MAC  
    DESCRIPTION=`$SCRIPTS/getintdesc $i`
    echo $DESCRIPTION > $CONFIG/$NAME/Description
    echo up > $CONFIG/$NAME/STATUS
    ip link set down dev $i
    ip link set name $NAME dev $i
    echo "$NAME (new) : $DESCRIPTION"
  fi
done
[ "$OPT" == noconfig ] && exit
# configuring and bringing up the interfaces
echo "Configuring interfaces..."
cd $CONFIG
INTERFACES=`ls |grep -v VPN`
for i in $INTERFACES ; do
 if ! [ -d $CONFIG/$i/WiFi/ ] ; then 
   DESCRIPTION=`cat $CONFIG/$i/Description 2>/dev/null`
   if [ -z "$DESCRIPTION" ] ; then
      $SCRIPTS/getintdesc $i 2>/dev/null > $CONFIG/$i/Description
   fi
   if ! [ -r $CONFIG/$i/Bridge/Name -o -r $CONFIG/$i/Bond/Name ] ; then
     $SCRIPTS/setinterface $i
     $SCRIPTS/setvlans $i
   else 
     if [ -r $CONFIG/$i/Bond/Name ] ; then
       if ! grep -w -q $i $CONFIG/`cat $CONFIG/$i/Bond/Name`/BondList; then
         echo "Removed interface $i from bond `cat $CONFIG/$i/Bond/Name`"
         rm -rf $CONFIG/$i/Bond/
         $SCRIPTS/setinterface $i
         $SCRIPTS/setvlans $i
       fi
     fi
     if [ -r $CONFIG/$i/Bridge/Name ] ; then
       if ! grep -w -q $i $CONFIG/`cat $CONFIG/$i/Bridge/Name`/BridgeList; then
         echo "Removed interface $i from bridge `cat $CONFIG/$i/Bridge/Name`"
         rm -rf $CONFIG/$i/Bridge/
         $SCRIPTS/setinterface $i
         $SCRIPTS/setvlans $i
       fi
     fi
   fi
 fi
done


