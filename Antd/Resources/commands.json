[
  {
    "Key": "_version",
    "Value": [
      "20161020141638805"
    ],
    "Description": "Current command version"
  },
  {
    "Key": "bond-add-if",
    "Value": [
      "ifenslave $bond $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "bond-del-if",
    "Value": [
      "ifenslave -d $bond $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "bond-set",
    "Value": [
      "ip link set $bond down",
      "ip link del $bond",
      "ip link add name $bond type bond",
      "ip link set $bondme txqueuelen 10000",
      "ip link set $bond down",
      "echo 4 > /sys/class/net/$bond/bonding/mode",
      "echo 1 > /sys/class/net/$bond/bonding/lacp_rate",
      "echo 1 > /sys/class/net/$bond/lacp_rate",
      "echo 100 > /sys/class/net/$bond/bonding/miimon",
      "ip link set $bond up"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-add",
    "Value": [
      "brctl addbr $bridge"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-add-if",
    "Value": [
      "brctl addif $bridge $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-del",
    "Value": [
      "brctl delbr $bridge"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-del-if",
    "Value": [
      "brctl delif $bridge $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-set-pathcost",
    "Value": [
      "brctl setpathcost $bridge $path $cost set path cost"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-set-portprio",
    "Value": [
      "brctl setportprio $bridge $port $priority set port priority"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-show-br",
    "Value": [
      "brctl show $bridge | grep -ho '$bridge.*"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-show-brid",
    "Value": [
      "brctl show $bridge | grep -ho '$bridge.*' | awk '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-show-brif",
    "Value": [
      "brctl show $bridge | grep -ho '$bridge.*' | awk '{print $4}"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-show-brstpstatus",
    "Value": [
      "brctl show $bridge | grep -ho '$bridge.*' | awk '{print $3}"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-show-macs",
    "Value": [
      "brctl showmacs $bridge"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-show-stp",
    "Value": [
      "brctl showstp $bridge"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-stp-off",
    "Value": [
      "brctl stp $bridge off"
    ],
    "Description": ""
  },
  {
    "Key": "brctl-stp-on",
    "Value": [
      "brctl stp $bridge on"
    ],
    "Description": ""
  },
  {
    "Key": "cat-etc-gentoorel",
    "Value": [
      "cat /etc/gentoo-release | grep -v '^#' | grep -v '^$"
    ],
    "Description": ""
  },
  {
    "Key": "cat-etc-hostname",
    "Value": [
      "cat /etc/hostname | grep -v '^#' | grep -v '^$"
    ],
    "Description": ""
  },
  {
    "Key": "cat-etc-hosts",
    "Value": [
      "cat /etc/hosts | grep -v '^#' | grep -v '^$"
    ],
    "Description": ""
  },
  {
    "Key": "cat-etc-lsbrel",
    "Value": [
      "cat /etc/lsb-release | grep -v '^#' | grep -v '^$"
    ],
    "Description": ""
  },
  {
    "Key": "cat-etc-osrel",
    "Value": [
      "cat /etc/os-release | grep -v '^#' | grep -v '^$"
    ],
    "Description": ""
  },
  {
    "Key": "cat-etc-resolv",
    "Value": [
      "cat /etc/resolv.conf | grep -v '^#' | grep -v '^$"
    ],
    "Description": ""
  },
  {
    "Key": "dhclient4",
    "Value": [
      "dhclient $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "dhclient6",
    "Value": [
      "dhclient -6 $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "echo",
    "Value": [
      "echo $var1 $var2"
    ],
    "Description": ""
  },
  {
    "Key": "fdisk-print",
    "Value": [
      "echo -e \"p\" | fdisk $disk_device"
    ],
    "Description": ""
  },
  {
    "Key": "fdisk-set-partition",
    "Value": [
      "echo -e \"n\\n $part_number\\n $part_first_sector\\n $part_size\\n w\\n\" | fdisk $disk_device",
      "parted $disk_device $part_number 1 $name",
      "parted $disk_device align-check opt $part_number"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-arch",
    "Value": [
      "hostnamectl | grep -ho 'Architecture: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-bootid",
    "Value": [
      "hostnamectl | grep -ho 'Boot ID: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-chassis",
    "Value": [
      "hostnamectl | grep -ho 'Chassis: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-deployment",
    "Value": [
      "hostnamectl | grep -ho 'Deployment: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-hostname",
    "Value": [
      "hostnamectl | grep -ho 'Static hostname: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-iconname",
    "Value": [
      "hostnamectl | grep -ho 'Icon name: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-kernel",
    "Value": [
      "hostnamectl | grep -ho 'Kernel: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-location",
    "Value": [
      "hostnamectl | grep -ho 'Location: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-machineid",
    "Value": [
      "hostnamectl | grep -ho 'Machine ID: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-os",
    "Value": [
      "hostnamectl | grep -ho 'Operating System: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "hostnamectl-get-virtualization",
    "Value": [
      "hostnamectl | grep -ho 'Virtualization: .*' | awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-add-addr",
    "Value": [
      "ip addr add $address/$range dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-add-addr-broadcast",
    "Value": [
      "ip addr add $address/$range broadcast $broadcast dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-add-multipath-route",
    "Value": [
      "ip route add default scope global nexthop dev $net1 nexthop dev $net2"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-add-nat",
    "Value": [
      "ip route add nat $ip_address via $ip_via_address"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-add-route",
    "Value": [
      "ip route add $ip_address via $gateway dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-add-tunnel-point-to-point",
    "Value": [
      "ip tunnel add $net_if mode sit ttl $ttl remote $tunnel local $local_address"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-del-addr",
    "Value": [
      "ip addr del $address/$range dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-del-addr-broadcast",
    "Value": [
      "ip addr del $address/$range broadcast $broadcast dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-del-route",
    "Value": [
      "ip route del $ip_address via $gateway dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-del-tunnel-point-to-point",
    "Value": [
      "ip tunnel del $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-disable-if",
    "Value": [
      "ip link set $net_if down"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-enable-if",
    "Value": [
      "ip link set $net_if up"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-flush-configuration",
    "Value": [
      "ip addr flush dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-get-if-addr",
    "Value": [
      "ip addr show $net_if | grep -ho 'inet .*' | awk '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-get-if-brd",
    "Value": [
      "ip addr show $net_if | grep -ho 'inet .*' | awk '{print $4}"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-get-if-macaddress",
    "Value": [
      "cat /sys/class/net/$net_if/address"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-get-if-mtu",
    "Value": [
      "cat /sys/class/net/$net_if/mtu"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-if-isdown",
    "Value": [
      "ip addr show eth0 | grep -c 'state DOWN"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-if-isup",
    "Value": [
      "ip addr show eth0 | grep -c 'state UP"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-set-macaddress",
    "Value": [
      "ip link set $net_if down",
      "ip link set dev $net_if address $address",
      "ip link set $net_if up"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-set-mtu",
    "Value": [
      "ip link set dev $net_if mtu $mtu"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-show-if-addr",
    "Value": [
      "ip addr show $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-show-if-link",
    "Value": [
      "ip link show $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-show-if-stats",
    "Value": [
      "ip -s link ls $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-show-routes",
    "Value": [
      "ip route show $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-show-tunnels",
    "Value": [
      "ip tunnel show $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip4-show-updown",
    "Value": [
      "ip link show $net_if | grep -ho ' UP \\| DOWN '| grep -v '^$"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-add-addr",
    "Value": [
      "ip -6 addr add $address/$range dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-add-neigh",
    "Value": [
      "ip -6 neigh add $ip_address lladdr $ip_lay_address dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-add-new-address",
    "Value": [
      "ip -6 addr add $ip_address dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-add-route",
    "Value": [
      "ip -6 route add $ip_address via $gateway"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-add-route-dev",
    "Value": [
      "ip -6 route add $gateway dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-del-addr",
    "Value": [
      "ip -6 addr del $address/$range dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-del-address",
    "Value": [
      "ip -6 addr del $ip_address dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-del-neigh",
    "Value": [
      "ip -6 neigh del $ip_address lladdr $ip_lay_address dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-del-route",
    "Value": [
      "ip -6 route del $ip_address via $gateway"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-del-route-dev",
    "Value": [
      "ip -6 route del $gateway dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-flush-configuration",
    "Value": [
      "ip -6 addr flush dynamic"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-show-if-link",
    "Value": [
      "ip -6 link show $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-show-if-stats",
    "Value": [
      "ip -6 -s link ls $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-show-neigh",
    "Value": [
      "ip -6 neigh show dev $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-show-routes",
    "Value": [
      "ip -6 route show $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "ip6-show-tunnels",
    "Value": [
      "ip -6 tunnel show $net_if"
    ],
    "Description": ""
  },
  {
    "Key": "mono-antdsh-update",
    "Value": [
      "mono /framework/antdsh/antdsh.exe update $context"
    ],
    "Description": ""
  },
  {
    "Key": "mono-antdsh-update-check",
    "Value": [
      "mono /framework/antdsh/antdsh.exe update check"
    ],
    "Description": ""
  },
  {
    "Key": "rsync",
    "Value": [
      "rsync -aHA $source/ $destination/"
    ],
    "Description": ""
  },
  {
    "Key": "rsync-delete-after",
    "Value": [
      "rsync -aHA --delete-after $source/ $destination/"
    ],
    "Description": ""
  },
  {
    "Key": "rsync-delete-during",
    "Value": [
      "rsync -aHA --delete-during $source/ $destination/"
    ],
    "Description": ""
  },
  {
    "Key": "set-bond",
    "Value": [
      "ip link set $bond_name down",
      "ip link del $bond_name",
      "ip link add name $bond_name type bond",
      "ip link set $bond_name txqueuelen 10000",
      "ip link set $bond_name down",
      "echo 4 > /sys/class/net/$bond_name/bonding/mode",
      "echo 1 > /sys/class/net/$bond_name/bonding/lacp_rate",
      "echo 1 > /sys/class/net/$bond_name/lacp_rate",
      "echo 100 > /sys/class/net/$bond_name/bonding/miimon",
      "ip link set $bond_name up"
    ],
    "Description": ""
  },
  {
    "Key": "set-chassis",
    "Value": [
      "hostnamectl set-chassis $host_chassis"
    ],
    "Description": ""
  },
  {
    "Key": "set-deployment",
    "Value": [
      "hostnamectl set-deployment $host_deployment"
    ],
    "Description": ""
  },
  {
    "Key": "set-hostname",
    "Value": [
      "hostnamectl set-hostname $host_name"
    ],
    "Description": ""
  },
  {
    "Key": "set-location",
    "Value": [
      "hostnamectl set-location $host_location"
    ],
    "Description": ""
  },
  {
    "Key": "set-network-interface",
    "Value": [
      "ip link set dev $interface_name down",
      "ip link set dev $interface_name up",
      "ip link set $interface_name txqueuelen 10000",
      "ip link set dev $interface_name up"
    ],
    "Description": ""
  },
  {
    "Key": "set-ntpdate",
    "Value": [
      "ntpdate $date_server",
      "timedatectl --no-pager --no-ask-password --adjust-system-clock set-ntp yes"
    ],
    "Description": ""
  },
  {
    "Key": "set-timezone",
    "Value": [
      "timedatectl --no-pager --no-ask-password --adjust-system-clock set-timezone $host_timezone"
    ],
    "Description": ""
  },
  {
    "Key": "set-vlan",
    "Value": [
      "ip link set $vlan_interface_name down",
      "ip link del $vlan_interface_name",
      "ip link add name $vlan_interface_name link $interface_name type vlan id $vlan_id",
      "ip link set $vlan_interface_name txqueuelen 10000",
      "ip link set $vlan_interface_name up"
    ],
    "Description": ""
  },
  {
    "Key": "sync-clock",
    "Value": [
      "hwclock --systohc",
      "hwclock --hctosys"
    ],
    "Description": ""
  },
  {
    "Key": "timedatectl-get-localtime",
    "Value": [
      "timedatectl | grep -ho 'Local time: .*'| awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "timedatectl-get-nettimeon",
    "Value": [
      "timedatectl | grep -ho 'Network time on: .*'| awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "timedatectl-get-ntpsync",
    "Value": [
      "timedatectl | grep -ho 'NTP synchronized: .*'| awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "timedatectl-get-rtcintz",
    "Value": [
      "timedatectl | grep -ho 'RTC in local TZ: .*'| awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "timedatectl-get-rtctime",
    "Value": [
      "timedatectl | grep -ho 'RTC time: .*'| awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "timedatectl-get-timezone",
    "Value": [
      "timedatectl | grep -ho 'Time zone: .*'| awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "timedatectl-get-univtime",
    "Value": [
      "timedatectl | grep -ho 'Universal time: .*'| awk -F: '{print $2}"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-destroy",
    "Value": [
      "virsh destroy $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-reboot",
    "Value": [
      "virsh reboot $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-reset",
    "Value": [
      "virsh reset $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-restore",
    "Value": [
      "virsh restore $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-resume",
    "Value": [
      "virsh resume $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-shutdown",
    "Value": [
      "virsh shutdown $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-start",
    "Value": [
      "virsh start $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-suspend",
    "Value": [
      "virsh suspend $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-dompmsuspend",
    "Value": [
      "virsh dompmsuspend $domain"
    ],
    "Description": ""
  },
  {
    "Key": "virsh-dompmwakeup",
    "Value": [
      "virsh dompmwakeup $domain"
    ],
    "Description": ""
  },
  {
    "Key": "zpool-mklabel",
    "Value": [
      "parted /dev/$disk_device mklabel $zpool_label Yes"
    ],
    "Description": ""
  },
  {
    "Key": "zpool-create",
    "Value": [
      "zpool create -f -o altroot=$pool_altroot -o ashift=12 -O casesensitivity=insensitive -O normalization=formD $pool_name $pool_type $disk_byid"
    ],
    "Description": ""
  },
  {
    "Key": "zpool-create-simple",
    "Value": [
      "zpool create -f -o altroot=$pool_altroot $pool_name Storage01 $disk"
    ],
    "Description": ""
  },
  {
    "Key": "zfs-create",
    "Value": [
      "zfs create -o compression=lz4 -o atime=off $pool_name/$dataset_name",
      "zfs set xattr=on $pool_name/$dataset_name",
      "zfs set acltype=posixacl $pool_name/$dataset_name",
      "zfs set aclinherit=passthrough-x $pool_name/$dataset_name",
      "zfs set mountpoint=/$pool_altroot/$pool_name/$dataset_name $pool_name/$dataset_name",
      "zpool add $pool_name log $disk_log",
      "zpool add $pool_name cache $disk_cache",
      "zpool set cachefile=/etc/zfs/zpool.cache $pool_name",
      "zpool set cachefile=/etc/zfs/zpool.cache $pool_name"
    ],
    "Description": ""
  }
]