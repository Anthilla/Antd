@*
//-------------------------------------------------------------------------------------
//     Copyright (c) 2014, Anthilla S.r.l. (http://www.anthilla.com)
//     All rights reserved.
//
//     Redistribution and use in source and binary forms, with or without
//     modification, are permitted provided that the following conditions are met:
//         * Redistributions of source code must retain the above copyright
//           notice, this list of conditions and the following disclaimer.
//         * Redistributions in binary form must reproduce the above copyright
//           notice, this list of conditions and the following disclaimer in the
//           documentation and/or other materials provided with the distribution.
//         * Neither the name of the Anthilla S.r.l. nor the
//           names of its contributors may be used to endorse or promote products
//           derived from this software without specific prior written permission.
//
//     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
//     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//     DISCLAIMED. IN NO EVENT SHALL ANTHILLA S.R.L. BE LIABLE FOR ANY
//     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//     20141110
//-------------------------------------------------------------------------------------*@

@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{Layout = "_layout.cshtml";}

@section PageBar {
    <style type="text/css">
        #Scheduler-TB {
            border-bottom: 10px solid #A7BD39;
            height: 80px !important;
        }
    </style>
    <nav class="navigation-bar bg-anthilla-gray-m page-bar menu-bar" style="height: 50px !important;">
        <nav class="navigation-bar-content">
            <div class="element upcase fg-anthilla-green border-2-anthilla-gray-m no-overlay" style="padding-top: 11px;">
                <i class="icon-box on-left" style="line-height: 5px;"></i>
                Scheduler
            </div>
            <div class="element-divider"></div>

            <a class="element upcase fg-anthilla-green border-2-anthilla-green no-overlay anchor" data-scrollto="#OneTimeOnly" style="padding-top: 11px;">New One time only
            </a>
            <div class="element-divider"></div>
            <a class="element upcase fg-anthilla-green border-2-anthilla-green no-overlay anchor" data-scrollto="#Cron" style="padding-top: 11px;">New with Cron
            </a>
            <div class="element-divider"></div>
            @*<a class="element upcase fg-anthilla-green border-2-anthilla-green no-overlay anchor" data-scrollto="#Other" style="padding-top: 11px;">Other
            </a>
            <div class="element-divider"></div>*@

            <a class="element place-right upcase fg-anthilla-green border-2-anthilla-gray-m no-overlay anchor" data-scrollto="top" style="padding-top: 8px;">
                <i class="icon-arrow-up"></i>
            </a>
        </nav>
    </nav>
}

@section Dashboard {
    @functions{
        public string[] DaysOfTheWeek = new string[] {
            "Monday",
	        "Tuesday",
	        "Wednesday",
	        "Thursday",
	        "Friday",
	        "Saturday",
	        "Sunday"
        };

        public string[] MonthsOfTheYear = new string[] {
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
        };

        public string GetMonthNumber(string month) {
            int index = Array.IndexOf(MonthsOfTheYear, month);
            return (index + 1).ToString();
        }
    }
    <form id="OneTimeOnly" action="/scheduler/now" method="POST" enctype="multipart/form-data" style="display: none;">
        <div class="grid">
            <div class="row">
                <div class="span2">
                    <label>Name</label>
                </div>
                <div class="span10">
                    <input type="text" name="Alias" style="width: 90%; height: 25px;">
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Command</label>
                </div>
                <div class="span10">
                    <input type="text" name="Command" style="width: 90%; height: 25px;">
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <label>&nbsp</label>
                    <input class="bg-anthilla-green fg-white" type="submit" value="Submit" style="width: 100%; height: 34px;">
                </div>
            </div>
        </div>
    </form>
    <form id="Cron" action="/scheduler/cron" method="POST" enctype="multipart/form-data" style="display: none;">
        <div class="grid" style="padding-left: 25px;">
            <div class="row">
                <div class="span2">
                    <label>Name</label>
                </div>
                <div class="span10">
                    <input type="text" name="Alias" style="width: 90%; height: 25px;">
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Command</label>
                </div>
                <div class="span10">
                    <input type="text" name="Command" style="width: 90%; height: 25px;">
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Start Time</label>
                </div>
                <div class="span10">
                    <select id="CronStartTimeHour" name="CronStartTimeHour" class="bg-anthilla-gray border-anthilla-green fg-white" style="width: 75px; text-align: right; padding-right: 10px;">
                        <option value="--" selected>--</option>
                        @for (int i = 0; i < 24; i++) {
                            <option value="@i.ToString()" >@i.ToString() </option>
                        }
                    </select>
                    <select id="CronStartTimeMinute" name="CronStartTimeMinute" class="bg-anthilla-gray border-anthilla-green fg-white" style="width: 75px; text-align: right; padding-right: 10px;">
                        <option value="--" selected>--</option>
                        @for (int i = 0; i < 60; i++) {
                            <option value="@i.ToString()" >@i.ToString() </option>
                        }
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Minutes</label>
                </div>
                <div class="span10">
                    <p style="display: inline-block;">Every</p>
                    <input id="CronMinutes" type="text" />
                    <p style="display: inline-block;">minute(s)</p>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Hours</label>
                </div>
                <div class="span10">
                    <p style="display: inline-block;">Every</p>
                    <input id="CronHours" type="text" />
                    <p style="display: inline-block;">hour(s)</p>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Select Days</label>
                </div>
                <div class="span10">
                    <input name="CronDays" id="CronDaysPeriodic" type="radio" checked />
                    -
                <p style="display: inline-block;">Every</p>
                    <input id="CronDays" type="text" />
                    <p style="display: inline-block;">day(s)</p>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>&nbsp</label>
                </div>
                <div class="span10" id="CronDotW">
                    <input name="CronDays" id="CronDaysDaysOfWeek" type="radio" />
                    -
                @foreach (string day in DaysOfTheWeek) {
                    <input class="cronDayOfTheWeek" type="checkbox" checked="checked" value="@day.Substring(0, 3).ToUpper()" />
                    <p style="display: inline-block;">@day</p>
                }
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>&nbsp</label>
                </div>
                <div class="span10">
                    <input name="CronDays" id="CronDaysLastDay" type="radio" />
                    - 
                    <p style="display: inline-block;">Last day of the month</p>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Select Month</label>
                </div>
                <div class="span11" id="CronMotY">
                    @foreach (string month in MonthsOfTheYear) {
                        <input class="cronMonthOfTheYear" type="checkbox" checked="checked" value="@GetMonthNumber(month)" />
                        <p style="display: inline-block;">@month</p>
                    }
                </div>
            </div>
            <hr class="bg-anthilla-green" />
            <div class="row">
                <div class="span2">
                    <label>Cron Expression</label>
                </div>
                <div class="span10">
                    <input name="CronResult" id="CronResult" type="text" style="width: 90%; height: 35px; border-width: 0 0 2px 0 !important; border-color: #A7BD39 !important;" class="bg-anthilla-gray-m" />
                </div>
                <div class="span2">
                    @*<i class="icon-info-2 fg-anthilla-green" id="ShowCronInfo"></i>*@
                    <div id="CronInfo" style="min-width: 100px; min-height: 100px; display: none; position: absolute; z-index: 123; right: 50px; top: 300px;">
                        <table class="table">
                            <tbody>
                                <style type="text/css">
                                    .rotate290 {
                                        -ms-transform: rotate(290deg); /* IE 9 */
                                        -webkit-transform: rotate(290deg); /* Chrome, Safari, Opera */
                                        transform: rotate(290deg);
                                    }
                                </style>
                                <tr class="bg-anthilla-gray-m">
                                    <td class="rotate290 bg-anthilla-gray-m">Seconds</td>
                                    <td class="rotate290 bg-anthilla-gray-m">Minutes</td>
                                    <td class="rotate290 bg-anthilla-gray-m">Hours </td>
                                    <td class="rotate290 bg-anthilla-gray-m">Day of month</td>
                                    <td class="rotate290 bg-anthilla-gray-m">Month</td>
                                    <td class="rotate290 bg-anthilla-gray-m">Day of week</td>
                                    <td class="rotate290 bg-anthilla-gray-m">Year</td>
                                </tr>
                                <tr>
                                    <td>
                                        <p>0-59</p>
                                    </td>
                                    <td>
                                        <p>0-59</p>
                                    </td>
                                    <td>
                                        <p>0-23</p>
                                    </td>
                                    <td>
                                        <p>1-31</p>
                                    </td>
                                    <td>
                                        <p>1-12 or JAN-DEC</p>
                                    </td>
                                    <td>
                                        <p>1-7 or SUN-SAT</p>
                                    </td>
                                    <td>
                                        <p>empty or 1</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <label>&nbsp</label>
                    <input id="submit" class="bg-anthilla-green fg-white" type="submit" value="Submit" style="width: 100%; height: 34px;">
                </div>
            </div>
        </div>
    </form>
    @*    <form id="Other" action="/scheduler/other" method="POST" enctype="multipart/form-data" style="display: none;">
        <div class="grid">
            <div class="row">
                <div class="span2">
                    <label>Name</label>
                </div>
                <div class="span10">
                    <input type="text" name="Alias" style="width: 90%; height: 25px;">
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Command</label>
                </div>
                <div class="span10">
                    <input type="text" name="Command" style="width: 90%; height: 25px;">
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <label>&nbsp</label>
                    <input class="bg-anthilla-green fg-white" type="submit" value="Submit" style="width: 100%; height: 34px;">
                </div>
            </div>
        </div>
    </form>*@
}

@section MainContent {
    @functions{
        public string SetCommandLine(string json) {
            string[] data = Newtonsoft.Json.JsonConvert.DeserializeObject<string[]>(json);
            string d = String.Join(" ", data);
            return d;
        }
    }

    @foreach (antdlib.Scheduler.JobModel job in Model.JobList) {
        @if (job != null) {
            <div data-role="panel" class="panel collapsed border-2-anthilla-gray" data-guid="@job.Guid" style="margin-bottom: 5px;">
                <div class="panel-header bg-anthilla-gray fg-white">
                    <p class="fg-white" style="display: inline-block;">
                        @if (job.TriggerPeriod == antdlib.Scheduler.TriggerPeriod.IsOneTimeOnly) {
                            <i class="icon-alarm-clock on-left"></i>
                        }
                        @if (job.TriggerPeriod == antdlib.Scheduler.TriggerPeriod.IsCron) {
                            <i class="icon-history on-left"></i>
                        }
                        @job.Alias
                    </p>
                    <p class="fg-white" style="display: inline-block;">@SetCommandLine(job.Data)</p>
                </div>
                <div class="panel-content" style="display: none;">
                    <ul class="fg-white" style="list-style: none;">
                        <li>
                            <label>Name</label>
                            <p>@job.Alias</p>
                        </li>
                        <li>
                            <label>Command launched at this scheduled task</label>
                            <p>@SetCommandLine(job.Data)</p>
                        </li>
                        <li>
                            <label>Period</label>
                            @if (job.TriggerPeriod == antdlib.Scheduler.TriggerPeriod.IsOneTimeOnly) {
                                <p>One-time-only</p>
                            }
                            @if (job.TriggerPeriod == antdlib.Scheduler.TriggerPeriod.IsCron) {
                                <p>With Cron Expression: @job.CronExpression</p>
                            }
                        </li>
                        <li>
                            <label>Start Time</label>
                            <p>@job.StartTime.ToString("HH:mm")</p>
                        </li>
                    </ul>
                    <hr />
                    @if (job.isEnabled == true && job.TriggerPeriod == antdlib.Scheduler.TriggerPeriod.IsCron) {
                        <p class="button bg-yellow" data-action="disable" data-guid="@job.Guid" style="color: black !important;">Status: Enabled</p>
                    }
                    @if (job.isEnabled == false && job.TriggerPeriod == antdlib.Scheduler.TriggerPeriod.IsCron) {
                        <p class="button bg-yellow" data-action="enable" data-guid="@job.Guid" style="color: black !important;">Status: Disabled</p>
                    }
                    @if (job.TriggerPeriod == antdlib.Scheduler.TriggerPeriod.IsOneTimeOnly) {
                        <p class="button bg-yellow" data-action="launch" data-guid="@job.Guid" style="color: black !important;">Launch Now</p>
                    }
                    <p class="button bg-yellow" data-action="delete" data-guid="@job.Guid" style="color: black !important;">Delete</p>
                </div>
            </div>
        }
    }

}

@section Scripts {
    <script type="text/javascript">
        $('#ShowCronInfo').click(function () {
            $('#CronInfo').toggle();
        });

        $('p[data-action="disable"]').click(function () {
            var guid = $(this).attr('data-guid');
            jQuery.support.cors = true;
            $.ajax({
                url: '/scheduler/disable/' + guid,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                success: function (data) {
                    console.log(data);
                    location.reload(true);
                    return false;
                }
            });
        });

        $('p[data-action="enable"]').click(function () {
            var guid = $(this).attr('data-guid');
            jQuery.support.cors = true;
            $.ajax({
                url: '/scheduler/enable/' + guid,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                success: function (data) {
                    console.log(data);
                    location.reload(true);
                    return false;
                }
            });
        });

        $('p[data-action="launch"]').click(function () {
            var guid = $(this).attr('data-guid');
            jQuery.support.cors = true;
            $.ajax({
                url: '/scheduler/launch/' + guid,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                success: function (data) {
                    console.log(data);
                    location.reload(true);
                    return false;
                }
            });
        });

        $('p[data-action="delete"]').click(function () {
            var guid = $(this).attr('data-guid');
            jQuery.support.cors = true;
            $.ajax({
                url: '/scheduler/delete/' + guid,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                success: function (data) {
                    console.log(data);
                    location.reload(true);
                    return false;
                }
            });
        });

        $('a[data-scrollto="#OneTimeOnly"]').click(function () {
            $('#Other').hide();
            $('#Cron').hide();
            $('#OneTimeOnly').toggle();
        });

        $('a[data-scrollto="#Cron"]').click(function () {
            $('#OneTimeOnly').hide();
            $('#Other').hide();
            $('#Cron').toggle();
        });

        $('a[data-scrollto="#Other"]').click(function () {
            $('#OneTimeOnly').hide();
            $('#Cron').hide();
            $('#Other').toggle();
        });

        function SetCronExpression() {
            var $defaults = {
                zero: '0',
                all: '*',
                undefined: '?'
            };
            var cronExpression;
            var seconds = $defaults.zero,
                minutes = $defaults.zero,
                hours = $defaults.zero,
                dayOfmonth = $defaults.all,
                month = $defaults.all,
                dayOfweek = $defaults.all;
            var $formatExample = '0 0/5 * * *'

            //controlla se c'è una periodicità nei minuti
            var periodMinutes = $('#CronMinutes').val();
            if (periodMinutes == '') {
                minutes = $('#CronStartTimeMinute').val();
            }
            else {
                minutes = '0/' + periodMinutes;
            }

            //controlla se c'è una periodicità nelle ore
            var periodHours = $('#CronHours').val();
            if (periodHours == '') {
                if ($('#CronStartTimeHour').val() == '--') {
                    hours = $defaults.all;
                }
                else {
                    hours = $('#CronStartTimeHour').val();
                }
            }
            else {
                hours = '0/' + periodHours;
            }

            //prima check il tipo di periodicità nei giorni
            if ($('#CronDaysPeriodic').prop('checked')) {
                dayOfweek = $defaults.undefined;
                //controlla se c'è una periodicità nei giorni
                var periodDays = $('#CronDays').val();
                if (periodDays == '') {
                    dayOfmonth = $defaults.all;
                }
                else {
                    dayOfmonth = '1/' + periodDays;
                }
            }
            if ($('#CronDaysDaysOfWeek').prop('checked')) {
                dayOfmonth = $defaults.undefined;
                var dayz = [];
                $('#CronDotW').find('.cronDayOfTheWeek:checked').each(function (index) {
                    dayz.push($(this).val());
                });
                dayOfweek = dayz.join(',');
            }
            if ($('#CronDaysLastDay').prop('checked')) {
                dayOfmonth = "L";
                dayOfweek = $defaults.all;
            }

            var monthz = [];
            $('#CronMotY').find('.cronMonthOfTheYear:checked').each(function (index) {
                monthz.push($(this).val());
            });
            if (monthz.length == 0 || monthz.length == 12) {
                month = $defaults.all;
            }
            else {
                month = monthz.join(',');
            }

            cronExpression = seconds + ' ' + minutes + ' ' + hours + ' ' + dayOfmonth + ' ' + month + ' ' + dayOfweek;
            $('#CronResult').val(cronExpression);
        }

        $('input[type="text"], input[type="checkbox"], input[type="radio"], select, option').click(function () {
            SetCronExpression();
        });

        $('input[type="text"]').keyup(function () {
            SetCronExpression();
        });
    </script>
}