@*
    //-------------------------------------------------------------------------------------
    //     Copyright (c) 2014, Anthilla S.r.l. (http://www.anthilla.com)
    //     All rights reserved.
    //
    //     Redistribution and use in source and binary forms, with or without
    //     modification, are permitted provided that the following conditions are met:
    //         * Redistributions of source code must retain the above copyright
    //           notice, this list of conditions and the following disclaimer.
    //         * Redistributions in binary form must reproduce the above copyright
    //           notice, this list of conditions and the following disclaimer in the
    //           documentation and/or other materials provided with the distribution.
    //         * Neither the name of the Anthilla S.r.l. nor the
    //           names of its contributors may be used to endorse or promote products
    //           derived from this software without specific prior written permission.
    //
    //     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    //     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    //     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    //     DISCLAIMED. IN NO EVENT SHALL ANTHILLA S.R.L. BE LIABLE FOR ANY
    //     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    //     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    //     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    //     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    //     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    //     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    //
    //     20141110
    //-------------------------------------------------------------------------------------*@

@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{Layout = "_layout.cshtml";}

@section PageBar {
    @Html.Partial("_system-pagebar-static")
}

@section MainContent {
    <legend id="Mounts">Antd-Managed Mounts</legend>

    <div id="AntdMountdDashboard" style="display:none; padding: 15px; margin-bottom: 20px;" class="border-2-anthilla-gray;" class="border-2-anthilla-gray">
        <form class="grid" action="/system/mount/unit" method="POST" enctype="multipart/form-data">
            <div class="row">
                <div class="span4">
                    <label>mount</label>
                </div>
                <div class="span6">
                    <input name="Mount" type="text" value="" readonly="readonly" style="width: 90%;" />
                    <input name="Guid" type="hidden" value="" />
                </div>
            </div>
            <div class="row">
                <div class="span4">
                    <label>unit</label>
                </div>
                <div class="span6">
                    <input name="Unit" id="show-units" type="text" value="" style="width: 90%;" />
                </div>
            </div>
            <div class="row">
                <div class="span4">
                </div>
                <div class="span6">
                    <input type="submit" value="Add" readonly="readonly" style="width: 90%;" class="fg-anthilla-green" />
                </div>
            </div>
        </form>
    </div>

    <table class="table">
        <tbody>
            @foreach (antdlib.MountPoint.MountModel mount in antdlib.MountPoint.MountRepository.Get()) {
                <tr data-guid="@mount.Guid" data-timestamp="@mount.DFPTimestamp">
                    <td style="width: 40px;">@mount.MountContext</td>
                    <td style="width: 40%;">@antdlib.MountPoint.Mount.SetDirsPath(mount.Path)</td>
                    <td style="width: 20px; text-align: center;" class="bg-anthilla-gray-m">
                        <i class="icon-arrow-right-5 fg-white"></i>
                    </td>
                    <td style="width: 40%;">@mount.Path</td>
                    <td>
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.Mounted) {
                            <i class="icon-record fg-green on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.Unmounted) {
                            <i class="icon-record fg-red on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.MountedTMP) {
                            <i class="icon-record fg-orange on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.DifferentMount) {
                            <i class="icon-stop-2 fg-orange on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.Error) {
                            <i class="icon-stop-2 fg-red on-left"></i>
                        }
                        @mount.MountStatus
                    </td>
                    <td style="width: 20px; text-align: center;" class="bg-anthilla-gray-m">
                        <i data-guid="@mount.Guid" class="show-units-mgmt icon-file fg-anthilla-green"></i>
                    </td>
                </tr>
                <tr data-guid="@mount.Guid" style="display: none; border-bottom: 2px solid #3A3A3A;" class="mount-units">
                    <td class="bg-anthilla-gray-m" style="border-right: 2px solid #3A3A3A;"></td>
                    <td colspan="3">
                        <ul class="fg-white" style="list-style: none;">
                            @foreach (string unit in mount.AssociatedUnits) {
                                <li>
                                    <i class="icon-remove on-left fg-orange" data-role="remove-this-unit" data-guid="@mount.Guid" data-unit="@unit" style="cursor: pointer;"></i>
                                    @unit
                                </li>
                            }
                        </ul>
                    </td>
                    <td colspan="2">
                        <input type="button" value="Add Units" style="width:90%" data-guid="@mount.Guid" data-mntpth="@mount.Path" data-role="show-dashboard" />
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <legend id="Mounts">Local Machine Mounts</legend>
    <table class="table">
        <tbody>
            @foreach (antdlib.MountPoint.MountModel mount in antdlib.MountPoint.MountLocal.Get()) {
                <tr>
                    <td style="width: 100px;">@mount.Type</td>
                    <td>@mount.Device</td>
                    <td style="width: 20px; text-align: center;" class="bg-anthilla-gray-m"><i class="icon-link fg-white"></i></td>
                    <td style="width: 35%;">@mount.Path</td>
                    <td style="width: 20px; text-align: center;" class="bg-anthilla-gray-m"><i class="icon-arrow-right-5 fg-white"></i></td>
                    <td style="width: 35%;">@mount.MountedPath</td>
                    <td style="width: 20px; text-align: center;">
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.Mounted) {
                            <i class="icon-record fg-green on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.Unmounted) {
                            <i class="icon-record fg-red on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.MountedTMP) {
                            <i class="icon-record fg-orange on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.DifferentMount) {
                            <i class="icon-stop-2 fg-orange on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.MountedReadOnly) {
                            <i class="icon-eye fg-green on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.MountedReadWrite) {
                            <i class="icon-pencil fg-green on-left"></i>
                        }
                        @if (mount.MountStatus == antdlib.MountPoint.MountStatus.Error) {
                            <i class="icon-stop-2 fg-red on-left"></i>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

@section Scripts {
    <script type="text/javascript">
        $('i.show-units-mgmt').click(function () {
            var g = $(this).attr('data-guid');
            $('tr.mount-units[data-guid="' + g + '"]').toggle();
        });

        $('input[data-role="show-dashboard"]').click(function () {
            var g = $(this).attr('data-guid');
            $('#AntdMountdDashboard').toggle();
            $('#AntdMountdDashboard').find('input[name="Guid"]').val(g);
            $('#AntdMountdDashboard').find('input[name="Mount"]').val($(this).attr('data-mntpth'));
        });

        $('i[data-role="remove-this-unit"]').click(function () {
            var g = $(this).attr('data-guid');
            var u = $(this).attr('data-unit');
            jQuery.support.cors = true;
            $.ajax({
                url: '/system/mount/unit',
                type: 'DELETE',
                data: {
                    Guid: g,
                    Unit: u
                },
                success: function () {
                    location.reload(true);
                }
            });
        });
    </script>
}
