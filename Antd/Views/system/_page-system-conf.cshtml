@*
///-------------------------------------------------------------------------------------
///     Copyright (c) 2014, Anthilla S.r.l. (http://www.anthilla.com)
///     All rights reserved.
///
///     Redistribution and use in source and binary forms, with or without
///     modification, are permitted provided that the following conditions are met:
///         * Redistributions of source code must retain the above copyright
///           notice, this list of conditions and the following disclaimer.
///         * Redistributions in binary form must reproduce the above copyright
///           notice, this list of conditions and the following disclaimer in the
///           documentation and/or other materials provided with the distribution.
///         * Neither the name of the Anthilla S.r.l. nor the
///           names of its contributors may be used to endorse or promote products
///           derived from this software without specific prior written permission.
///
///     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
///     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
///     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
///     DISCLAIMED. IN NO EVENT SHALL ANTHILLA S.R.L. BE LIABLE FOR ANY
///     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
///     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
///     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
///     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
///     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
///     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///
///     20141110
///-------------------------------------------------------------------------------------*@

@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@using System.Collections.Generic
@{Layout = "_layout.cshtml";}

@section PageBar {
    @Html.Partial("_system-pagebar")
}

@section MainContent {
    <legend id="EditConf">Edit .conf</legend>
    <form id="FileConfigDashboard" action="/config/file" method="POST" enctype="multipart/form-data" style="display: none;">
        <div class="grid">
            <div class="row">
                <div class="span6">
                    <label id="title"></label>
                    <input type="hidden" name="FilePath" />
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <textarea name="FileContent" style="width: 100%; min-height: 300px; padding: 5px;" class="border-anthilla-green fg-white bg-anthilla-gray"></textarea>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <input id="submit" class="bg-lightGreen fg-white" type="submit" value="Submit">
                    <input id="clear" class="bg-violet fg-white" type="button" value="Clear">
                    <input id="close" class="bg-amber fg-white" type="button" value="Close">
                </div>
            </div>
        </div>
    </form>
    <input type="text" class="search-field" style="position: relative; margin-bottom: 15px; height: 30px; width: 100%; padding-left: 5px;" placeholder="Search">
    <table class="table searchable">
        <thead>
            <tr>
                <th class="text-left" colspan="2">etc content</th>
                <th class="text-left" colspan="2">created antd file</th>
            </tr>
        </thead>
        <tbody>
            @functions {
                public string DisplayIcon(bool isfile) {
                    if (isfile == true) {
                        return "icon-file";
                    }
                    else return "icon-folder fg-yellow";
                }
            }
            @foreach (dynamic cfile in Model.Conf) {
                <tr>
                    <td style="width: 500px;">
                        <p><i class="@DisplayIcon(cfile.isFile) on-left"></i>@cfile.etcPath</p>
                    </td>
                    <td style="width: 120px;">
                        @if (cfile.isFile == true && cfile.hasCfg == false) {
                            <p class="button bg-cobalt export-conf" data-path="@cfile.etcPath">Define <i class="icon-arrow-right on-right"></i></p>
                        }
                        @if (cfile.isFile == true && cfile.hasCfg == true) {
                            <p class="button bg-amber" data-path="@cfile.etcPath">Mounted</p>
                        }
                    </td>
                    <td>
                        @if (cfile.hasCfg == true) {
                            <p>@cfile.cfgName</p>
                        }
                    </td>
                    <td style="width: 120px;">
                        @if (cfile.hasCfg == true) {
                            <p class="button bg-darkViolet edit-conf" data-path="@cfile.cfgPath"><i class="icon-pencil on-left"></i>Edit File</p>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('tr>td').not('tr>td:first-child').css('width', '25%');
            $('tr>td:first-child').css('width', '200px');
        });

        $('#FirewallOptimizationOptionsSelect').change(function () {
            var thisVal = $(this).find(':selected').val();
            var r = $('#FirewallOptimizationOptionsDescription');
            if (thisVal == 'normal') {
                r.text('as the name says, it\'s the normal optimization algorithm');
            }
            if (thisVal == 'high-latency') {
                r.text('used for high latency links, such as satellite links.  Expires idle connections later than default');
            }
            if (thisVal == 'aggressive') {
                r.text('expires idle connections quicker. More efficient use of CPU and memory but can drop legitimate idle connections');
            }
            if (thisVal == 'conservative') {
                r.text('tries to avoid dropping any legitimate idle connections at the expense of increased memory usage and CPU utilization.');
            }
        });

        $('.search-field').keyup(function () {
            var queryString = $(this).val();
            var table = $('.searchable');
            var tableBody = table.children('tbody');
            var row = tableBody.children('tr');
            row.each(function (index) {
                var thisRow = $(this);
                var queriedText = $(this).text();
                if (queriedText.indexOf(queryString) != -1) {
                    thisRow.show();
                }
                if (queriedText.indexOf(queryString) < 0) {
                    thisRow.hide();
                }
            });
        });

        //$(document).ready(function () {
        //    var table = $('#SysctlBodyTable');
        //    $('#SysctlBodyTable > tr').each(function (index) {
        //        var thisRow = $(this);
        //        var stockValue = thisRow.find('td').eq(1).text();
        //        var runningValue = thisRow.find('td').eq(2).text();
        //        var antdValue = thisRow.find('td').eq(3).text();
        //        var c = thisRow.find('.value-comparer');
        //        c.show();
        //        if (runningValue == stockValue) {
        //            c.show();
        //            c.css("margin-left", "-600px");
        //            return false;
        //        }
        //        else if (runningValue == antdValue) {
        //            c.show();
        //            c.css("margin-left", "-250px");
        //            return false;
        //        }
        //        else {
        //            c.hide();
        //            return false;
        //        }
        //    });
        //});

        //$('div.value-comparer').click(function () {
        //    jQuery.support.cors = true;
        //    var p = $(this).attr('data-param');
        //    var v = $('input[data-param="' + p + '"]').val();
        //    var s = {
        //        param: p,
        //        value: v,
        //    };
        //    $.ajax({
        //        url: '/status/sysctl/' + s.param + '/' + s.value,
        //        type: 'POST',
        //        data: JSON.stringify(s),
        //        contentType: "application/json;charset=utf-8",
        //        success: function () {
        //            alert('new value for "' + s.param + '" is: ' + s.value);
        //            location.reload(true);
        //            return false;
        //        }
        //    });
        //});

        $('p.edit-conf').click(function () {
            var path = $(this).attr('data-path');
            jQuery.support.cors = true;
            $.ajax({
                url: '/system/read/file/' + path,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                success: function (text) {
                    var dashboard = $('#FileConfigDashboard');
                    dashboard.find('#title').text('Editing: ' + path);
                    dashboard.find('input[name="FilePath"]').val(path);
                    dashboard.find('textarea[name="FileContent"]').text(text);
                    dashboard.show();
                    //todo scrollup to dashboard
                    return false;
                }
            });
        });

        $('p.export-conf').click(function () {
            var p = $(this).attr('data-path');
            jQuery.support.cors = true;
            $.ajax({
                url: '/system/export/file/' + p,
                type: 'POST',
                data: JSON.stringify(p),
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    location.reload(true);
                    return false;
                }
            });
        });

        $('input#close').click(function () {
            var form = $('form');
            form.find('input').val('');
            form.find('textarea').text('');
            form.hide();
        });

        $('input#clear').click(function () {
            var form = $('form');
            form.find('input').val('');
            form.find('textarea').text('');
        });
    </script>
}