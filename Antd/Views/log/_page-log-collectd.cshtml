@*
    ///-------------------------------------------------------------------------------------
    ///     Copyright (c) 2014, Anthilla S.r.l. (http://www.anthilla.com)
    ///     All rights reserved.
    ///
    ///     Redistribution and use in source and binary forms, with or without
    ///     modification, are permitted provided that the following conditions are met:
    ///         * Redistributions of source code must retain the above copyright
    ///           notice, this list of conditions and the following disclaimer.
    ///         * Redistributions in binary form must reproduce the above copyright
    ///           notice, this list of conditions and the following disclaimer in the
    ///           documentation and/or other materials provided with the distribution.
    ///         * Neither the name of the Anthilla S.r.l. nor the
    ///           names of its contributors may be used to endorse or promote products
    ///           derived from this software without specific prior written permission.
    ///
    ///     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    ///     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    ///     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    ///     DISCLAIMED. IN NO EVENT SHALL ANTHILLA S.R.L. BE LIABLE FOR ANY
    ///     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    ///     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    ///     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ///     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    ///     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    ///     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    ///
    ///     20141110
    ///-------------------------------------------------------------------------------------*@

@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{Layout = "_layout.cshtml";}

@section PageBar {
}

@section MainContent {
    <div id="CollectdDataContainer" style="width: 100%; height: 500px; overflow: scroll !important;">
        <table class="table">
            <tbody id="CollectdData"></tbody>
        </table>
    </div>

    @*<div style="width: 100%; height: 400px;" class="bg-anthilla-gray"></div>
        <hr />
        <svg id="visualisation" width="1000" height="500"></svg>
        <hr />
        <p id="connection_message"></p>
        <div id="demo"></div>
        <input id="add-data" type="button" value="add" />
        <hr />
        <ul id="messages" class="fg-white">
            <li>Data:</li>
        </ul>*@
}

@section Scripts {
    <script type="text/javascript">

        $(function () {
            var connection = $.hubConnection();
            var proxy = connection.createHubProxy('CollectdHub');
            connection.start()
                .done(function () {
                    console.log('connection done!');
                })
                .fail(function () {
                    console.log('connection failed!');
                });

            proxy.on('getCollectdRefresh', function (data) {
                $.each(data, function (value) {
                    var container = $('#CollectdData');
                    var row = '<tr>' +
                        '<td><p>' + value.type + '-' + value.type_instance + '</p></td>' +
                        '<td><p>' + value.plugin + '-' + value.plugin_instance + '</p></td>' +
                        '</tr>';
                    container.append(row);
                });
            });
        });

        //      JSONData = [
        //{ "id": 3, "created_at": "Sun May 05 2013", "amount": 12000 },
        //{ "id": 1, "created_at": "Mon May 13 2013", "amount": 2000 },
        //{ "id": 2, "created_at": "Thu Jun 06 2013", "amount": 17000 },
        //{ "id": 4, "created_at": "Thu May 09 2013", "amount": 15000 },
        //{ "id": 5, "created_at": "Mon Jul 01 2013", "amount": 16000 }
        //      ];

        //      InitChart();

        //      function InitChart() {

        //          var lineData = [{
        //              'x': 1,
        //              'y': 5
        //          }, {
        //              'x': 20,
        //              'y': 20
        //          }, {
        //              'x': 40,
        //              'y': 10
        //          }, {
        //              'x': 60,
        //              'y': 40
        //          }, {
        //              'x': 80,
        //              'y': 5
        //          }, {
        //              'x': 100,
        //              'y': 60
        //          }];

        //          var vis = d3.select("#visualisation"),
        //            WIDTH = 1000,
        //            HEIGHT = 500,
        //            MARGINS = {
        //                top: 20,
        //                right: 20,
        //                bottom: 20,
        //                left: 50
        //            },
        //            xRange = d3.scale.linear().range([MARGINS.left, WIDTH - MARGINS.right]).domain([d3.min(lineData, function (d) {
        //                return d.x;
        //            }),
        //              d3.max(lineData, function (d) {
        //                  return d.x;
        //              })
        //            ]),

        //            yRange = d3.scale.linear().range([HEIGHT - MARGINS.top, MARGINS.bottom]).domain([d3.min(lineData, function (d) {
        //                return d.y;
        //            }),
        //              d3.max(lineData, function (d) {
        //                  return d.y;
        //              })
        //            ]),

        //            xAxis = d3.svg.axis()
        //              .scale(xRange)
        //              .tickSize(5)
        //              .tickSubdivide(true),

        //            yAxis = d3.svg.axis()
        //              .scale(yRange)
        //              .tickSize(5)
        //              .orient("left")
        //              .tickSubdivide(true);


        //          vis.append("svg:g")
        //            .attr("class", "x axis")
        //            .attr("transform", "translate(0," + (HEIGHT - MARGINS.bottom) + ")")
        //            .call(xAxis);

        //          vis.append("svg:g")
        //            .attr("class", "y axis")
        //            .attr("transform", "translate(" + (MARGINS.left) + ",0)")
        //            .call(yAxis);

        //          var lineFunc = d3.svg.line()
        //          .x(function (d) {
        //              return xRange(d.x);
        //          })
        //          .y(function (d) {
        //              return yRange(d.y);
        //          })
        //          .interpolate('linear');

        //          vis.append("svg:path")
        //            .attr("d", lineFunc(lineData))
        //            .attr("stroke", "blue")
        //            .attr("stroke-width", 2)
        //            .attr("fill", "none");

        //      }


        //      (function _collectd_() {
        //          var data = JSONData.slice()
        //          var format = d3.time.format("%a %b %d %Y")
        //          var amountFn = function (d) { return d.amount }
        //          var dateFn = function (d) { return format.parse(d.created_at) }

        //          var x = d3.time.scale()
        //            .range([10, 280])
        //            .domain(d3.extent(data, dateFn))

        //          var y = d3.scale.linear()
        //            .range([180, 10])
        //            .domain(d3.extent(data, amountFn))

        //          var svg = d3.select("#demo").append("svg:svg")
        //          .attr("width", 300)
        //          .attr("height", 200)

        //          var refreshGraph = function () {
        //              svg.selectAll("circle").data(data).enter()
        //               .append("svg:circle")
        //               .attr("r", 4)
        //               .attr("cx", function (d) { return x(dateFn(d)) })
        //               .attr("cy", function (d) { return y(amountFn(d)) })
        //          }

        //          d3.selectAll("#add-data").on("click", AddRandomValue(1, 1))

        //          $(function () {
        //              var connection = $.hubConnection();
        //              var proxy = connection.createHubProxy('CollectdHub');
        //              connection.start()
        //                  .done(function () {
        //                      console.log('connection done!');
        //                  })
        //                  .fail(function () {
        //                      console.log('connection failed!');
        //                  });

        //              proxy.on('getPointCoordinates', function (x, y) {
        //                  AddRandomValue(x, y);
        //                  $('#messages').append('<li>' + x + ';' + y + '</li>');
        //              });
        //          });

        //          function AddRandomValue(sx, sy) {
        //              console.log(sx);
        //              console.log(sy);
        //              var start = d3.min(data, dateFn)
        //              var end = d3.max(data, dateFn)
        //              var time = start.getTime() + Math.random() * (end.getTime() - start.getTime())
        //              var date = new Date(time)

        //              obj = {
        //                  'id': Math.floor(Math.random() * 70),
        //                  'amount': Math.floor(1000 + Math.random() * 20001),
        //                  'created_at': date.toDateString()
        //              }
        //              //aggiunge un oggetto all'insieme di dati e refresha il grafico tenendo conto di quel nuovo insieme di dati
        //              data.push(obj)
        //              refreshGraph()
        //          }

        //          refreshGraph()

        //      })();



    </script>
}