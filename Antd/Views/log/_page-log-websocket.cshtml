@*
    ///-------------------------------------------------------------------------------------
    ///     Copyright (c) 2014, Anthilla S.r.l. (http://www.anthilla.com)
    ///     All rights reserved.
    ///
    ///     Redistribution and use in source and binary forms, with or without
    ///     modification, are permitted provided that the following conditions are met:
    ///         * Redistributions of source code must retain the above copyright
    ///           notice, this list of conditions and the following disclaimer.
    ///         * Redistributions in binary form must reproduce the above copyright
    ///           notice, this list of conditions and the following disclaimer in the
    ///           documentation and/or other materials provided with the distribution.
    ///         * Neither the name of the Anthilla S.r.l. nor the
    ///           names of its contributors may be used to endorse or promote products
    ///           derived from this software without specific prior written permission.
    ///
    ///     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    ///     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    ///     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    ///     DISCLAIMED. IN NO EVENT SHALL ANTHILLA S.R.L. BE LIABLE FOR ANY
    ///     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    ///     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    ///     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ///     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    ///     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    ///     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    ///
    ///     20141110
    ///-------------------------------------------------------------------------------------*@

@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{Layout = "_layout.cshtml";}

@section PageBar {
}

@section MainContent {
    <div id="GaugeGraph" class="border-2-anthilla-gray bg-transparent">
        <h3 class="fg-white" style="margin-left: 10px;">label</h3>
    </div>
    <hr class="bg-2-anthilla-gray" />
    <table class="table">
        <thead>
            <tr>
                <td colspan="2">procs</td>
                <td colspan="4">memory</td>
                <td colspan="2">swap</td>
                <td colspan="2">io</td>
                <td colspan="2">system</td>
                <td colspan="5">cpu</td>
                <td colspan="2">timestamp</td>
            </tr>
            <tr>
                <td>r</td>
                <td>b</td>
                <td>swpd</td>
                <td>free</td>
                <td>buff</td>
                <td>cache</td>
                <td>si</td>
                <td>so</td>
                <td>bi</td>
                <td>bo</td>
                <td>in</td>
                <td>cs</td>
                <td>us</td>
                <td>sy</td>
                <td>id</td>
                <td>wa</td>
                <td>st</td>
                <td>date</td>
                <td>time</td>
            </tr>
        </thead>
        <tbody id="VMSTATS"></tbody>
    </table>
}

@section Scripts {
    <script src="/Scripts/d3.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        var pi = Math.PI, width = 500, height = 270; var iR = 170; var oR = 110;
        var cur_color = 'limegreen'; var new_color, hold; var max = 180, min = 0, current = 10;
        var arc = d3.svg.arc().innerRadius(iR).outerRadius(oR).startAngle(-90 * (pi / 180));
        var svg = d3.select('#GaugeGraph').append('svg').attr('width', width).attr('height', height)
          .append('g').attr('transform', 'translate(' + ((width / 2) - 40) + ',' + ((height / 2) + 40) + ')')
        var background = svg.append('path').datum({ endAngle: 90 * (pi / 180) }).style('fill', '#ddd').attr('d', arc);
        var foreground = svg.append('path').datum({ endAngle: -90 * (pi / 180) }).style('fill', cur_color).attr('d', arc);
        var max = svg.append('text').attr('transform', 'translate(' + (iR + ((oR - iR) / 2)) + ',15)').attr('text-anchor', 'middle').text(max);
        var min = svg.append('text').attr('transform', 'translate(' + -(iR + ((oR - iR) / 2)) + ',15)').attr('text-anchor', 'middle').text(min);
        var current = svg.append('text').attr('transform', 'translate(0,' + -(iR / 4) + ')').attr('text-anchor', 'middle').style('font-size', '75').text(current)

        //setInterval(function () {
        //    var num = Math.random() * 180; var numPi = Math.floor(num - 89) * (pi / 180);
        //    if (num >= 121) { new_color = 'red'; } else if (num >= 61) { new_color = 'orange'; } else { new_color = 'limegreen'; }
        //    current.transition().text(Math.floor(num));
        //    foreground.transition().duration(750).styleTween('fill', function () { return d3.interpolate(new_color, cur_color); }).call(arcTween, numPi);
        //    hold = cur_color; cur_color = new_color; new_color = hold;
        //}, 1500);

        function ResetValue(num) {
            if (num >= 121) { new_color = 'red'; } else if (num >= 61) { new_color = 'orange'; } else { new_color = 'limegreen'; }
            current.transition().text(Math.floor(num));
            foreground.transition().duration(750).styleTween('fill', function () { return d3.interpolate(new_color, cur_color); }).call(arcTween, numPi);
            hold = cur_color; cur_color = new_color; new_color = hold;
        }

        function arcTween(transition, newAngle) {
            transition.attrTween('d', function (d) {
                var interpolate = d3.interpolate(d.endAngle, newAngle);
                return function (t) { d.endAngle = interpolate(t); return arc(d); };
            });
        }

        $(document).ready(function () {
            jQuery.support.cors = true;
            $.ajax({
                url: '/log/websocket/listen',
                type: 'POST'
            });
        });

        $(function () {
            var connection = $.hubConnection();
            var proxy = connection.createHubProxy('DataHub');
            connection.start();

            proxy.on('getData', function (data) {
                var arr = data.trim().split(/ +/);
                var rowContent = "";
                $.each(arr, function (i, value) {
                    if (value.length > 0 && value != '') {
                        rowContent += '<td>' + value + '</td>';
                        //todo check is Number
                        ResetValue(arr[2]);
                    }
                });
                var row = '<tr>' + rowContent + '</tr>';
                $('#VMSTATS').append(row);
            });
        });
    </script>
}