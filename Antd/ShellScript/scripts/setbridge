#!/bin/sh
. /etc/kerbynet.conf
. $SCRIPTS/net.inc
NAME="$1"
[ -z "$NAME" ] && exit 1
CONFIG="$REGISTER/system/net/interfaces/"
BRIDGEDIR="$CONFIG/$NAME"
STP=`cat $BRIDGEDIR/STP`
BRIDGEDLIST=`cat $BRIDGEDIR/BridgeList`
echo "Configuring $NAME(`$SCRIPTS/ext_bridgename $NAME`) ..."
if [ "$STP" == yes ] ; then
  brctl stp $NAME on
else
  brctl stp $NAME off
fi 
ForwardDelay=`cat $BRIDGEDIR/ForwardDelay`
if ! brctl setfd $NAME "$ForwardDelay" 2> /dev/null >/dev/null ; then
   cat /sys/class/net/DEFAULTBR/bridge/forward_delay > /sys/class/net/$NAME/bridge/forward_delay
   echo DEFAULT > $BRIDGEDIR/ForwardDelay
fi
Ageing=`cat $BRIDGEDIR/Ageing`
if ! brctl setageing $NAME "$Ageing" 2> /dev/null >/dev/null ; then
  cat /sys/class/net/DEFAULTBR/bridge/ageing_time > /sys/class/net/$NAME/bridge/ageing_time
  echo DEFAULT > $BRIDGEDIR/Ageing
fi
MaxAge=`cat $BRIDGEDIR/MaxAge`
if ! brctl setmaxage $NAME "$MaxAge" 2> /dev/null >/dev/null ; then
  cat /sys/class/net/DEFAULTBR/bridge/max_age > /sys/class/net/$NAME/bridge/max_age
  echo DEFAULT > $BRIDGEDIR/MaxAge
fi
BridgePrio=`cat $BRIDGEDIR/BridgePrio`
if ! brctl setbridgeprio $NAME "$BridgePrio" 2> /dev/null >/dev/null ; then
  cat /sys/class/net/DEFAULTBR/bridge/priority > /sys/class/net/$NAME/bridge/priority
  echo DEFAULT > $BRIDGEDIR/BridgePrio
fi
HelloTime=`cat $BRIDGEDIR/HelloTime`
if ! brctl sethello $NAME "$HelloTime" 2> /dev/null >/dev/null ; then
   cat /sys/class/net/DEFAULTBR/bridge/hello_time > /sys/class/net/$NAME/bridge/hello_time
   echo DEFAULT > $BRIDGEDIR/HelloTime
fi
COMPONENTS="`ls /sys/class/net/$NAME/brif/`"
COMPONENTS2="`$SCRIPTS/net_interfacesbridged $NAME`"
for I in $BRIDGEDLIST ; do
   if echo $COMPONENTS |grep -v -q -w $I ; then
      ADDBRIDGED="$ADDBRIDGED $I"
   fi 
done
for I in $COMPONENTS2 ; do
   if echo $BRIDGEDLIST |grep -v -q -w $I ; then
      DELBRIDGED="$DELBRIDGED $I"
   fi 
done
for I in $DELBRIDGED ; do
   if echo $I | grep -q '\.' ; then
     TAG=`echo $I | awk -F. '{print $2}'`
     U=`echo $I | awk -F. '{print $1}'`
     RDIR="$CONFIG/$U/VLAN/$TAG/"
   else
     RDIR="$CONFIG/$I"
     U=$I
   fi
   rm -rf $RDIR/Bridge
   brctl delif $NAME $I
   IPs=`( cd $RDIR/IP 2>/dev/null && ls -d ?? 2>/dev/null )`
   for ipDIR in $IPs ; do
     ip=`cat $RDIR/IP/$ipDIR/IP`
     if [ -n "`$SCRIPTS/getipdir $NAME $ip`" ] ; then
        $SCRIPTS/removeip $NAME "`$SCRIPTS/getipdir $NAME $ip`"
     fi
   done
   if [ -d "$REGISTER/system/net/interfaces/$U/WiFi/" ] ; then
     $SCRIPTS/set-wifi $U
     iw $U set 4addr off
   else
     $SCRIPTS/setinterface $I
     $SCRIPTS/setvlans $I
   fi
   $SCRIPTS/router_natcheck $I
done 
for I in $ADDBRIDGED ; do
   if echo $I | grep -q '\.' ; then
     TAG=`echo $I | awk -F. '{print $2}'`
     U=`echo $I | awk -F. '{print $1}'`
     mkdir $CONFIG/$U/VLAN/$TAG/Bridge 2>/dev/null
     echo $NAME > $CONFIG/$U/VLAN/$TAG/Bridge/Name
     if ! ifconfig $U.$TAG 2>/dev/null /dev/null ; then
       $SCRIPTS/setinterface $U.$TAG
     fi
   else
     mkdir $CONFIG/$I/Bridge 2>/dev/null
     echo $NAME > $CONFIG/$I/Bridge/Name
     U=$I
   fi
   if [ -d "$REGISTER/system/net/interfaces/$I/WiFi/" ] ; then
       $SCRIPTS/set-wifi $I
       iw $I set 4addr on
   fi
   brctl addif $NAME $I 2>/dev/null
   $SCRIPTS/router_natcheck $I
   $SCRIPTS/setinterfaceforbridge $I
done
$SCRIPTS/routerconfig
ps -e |grep -q -w dhcpd && $SCRIPTS/dhcp_start 
exit 0
