#!/bin/bash
. /etc/kerbynet.conf
export PATH="/root/kerbynet.cgi/api:$PATH"
function SCRIPT {
  cd $DIR/Script
  if [ "$OPT" = TestScript ] ; then
    source TXT.test
    if [ -f "$OUT" ] ; then
      sed 's/:_:/: /g' < "$OUT"
    fi
  else
    source TXT $@ 
  fi
}
function CANCEL {
   touch $OUT.Cancel
}
function SMS {
  if [ -n "$1" ] ; then
    echo "$1" |awk '{printf("SMS:_:%s\n",$0)}' >> "$OUT"
  else
    if ! [ -t 0 ] ; then
      awk '{printf("SMS:_:%s\n",$0)}' >> "$OUT"
    else
      echo | awk '{printf("SMS:_:%s\n",$0)}' >> "$OUT"
    fi
  fi
}
function MAIL {
  if [ -n "$1" ] ; then
    echo "$1" |awk '{printf("MAIL:_:%s\n",$0)}' >> "$OUT"
  else
    if ! [ -t 0 ] ; then
      awk '{printf("MAIL:_:%s\n",$0)}' >> "$OUT"
    else
      echo | awk '{printf("MAIL:_:%s\n",$0)}' >> "$OUT"
    fi
  fi
}
function VIEWER {
  if [ -n "$1" ] ; then
    echo "$1" |awk '{printf("VIEWER:_:%s\n",$0)}' >> "$OUT"
  else
    if ! [ -t 0 ] ; then
      awk '{printf("VIEWER:_:%s\n",$0)}' >> "$OUT"
    else
      echo | awk '{printf("VIEWER:_:%s\n",$0)}' >> "$OUT"
    fi 
  fi
}
function GET_STATE {
  $SCRIPTS/alerts_getstate "$EVENT" "$1"
}
function SET_STATE {
  $SCRIPTS/alerts_setstate "$EVENT" "$1" "$2"
}
function IS_ALERT {
  if [ "`GET_STATE Status`" = ALERT ] ; then
    return 0
  else
    return 1
  fi
}
function IS_RECOVERED {
  if [ "`GET_STATE Status`" = RECOVERED ] ; then
    return 0
  else
    return 1
  fi
}
function ALERT {
  SET_STATE Status ALERT
}
function RECOVERED {
  SET_STATE Status RECOVERED
}
function eventlist {
  cd $REGISTER/system/alerts/Events 2>/dev/null || exit 5
  echo
  echo "You should specify one of then following events:"
  echo
  ls -drt *
  echo
}
export EVENT="$1"
OPT="$2"
DIR="$REGISTER/system/alerts/Events/$EVENT"
if [ -z "$EVENT" -o ! -d "$DIR" ] ; then
  eventlist
  exit 1
fi
if [ "`cat $DIR/Enabled 2>/dev/null`" != yes ] ; then
  exit 0
fi
export STATEDIR="$DIR/State"

cd "$DIR/Script"
PROCESSING="`cat Processing 2>/dev/null`"
if [ "$PROCESSING" != Disabled ] ; then
  OUT="/tmp/alert_msg-$$.out"
  rm -f $OUT $OUT.Cancel
  if [ -z "$ERRLOG" ] ; then
    ERRLOG="/dev/null"
  fi
  SCRIPT $@ 2>"$ERRLOG"
  if [ ! -f "$OUT.Cancel" ]  ; then
    if [ -f "$OUT" ] ; then
      grep "^VIEWER:_:" "$OUT" | awk -F":_:" '{print $2}' | $SCRIPTS/alert_msg "$EVENT"
      $SCRIPTS/alert_spool "$EVENT" < "$OUT"
    else
      $SCRIPTS/alert_msg "$EVENT"
      $SCRIPTS/alert_spool "$EVENT"
    fi 
  fi
  rm -f $OUT $OUT.Cancel
else
  $SCRIPTS/alert_msg "$EVENT"
  $SCRIPTS/alert_spool "$EVENT"
fi
