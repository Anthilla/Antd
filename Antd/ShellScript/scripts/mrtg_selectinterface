#!/bin/sh
. /etc/kerbynet.conf
INTERFACE="$1"
TYPE="$2"
if [ "$TYPE" = System -o "$TYPE" = Connections -o "$TYPE" = CP -o "$TYPE" = Memory ] ; then
  echo "</select>"
  exit
fi


function qos_array {
  INTERFACE_="$1"
  CLASS_="$2"
  IDIR="$REGISTER/system/net/interfaces"
  QDIR="$IDIR/$INTERFACE_/QoS"
  if [ "`cat $IDIR/$INTERFACE_/QoS/Enabled 2>/dev/null`" == yes ] ; then
    CDIR="$QDIR/Class"
    cd $CDIR
    if [ "`$SCRIPTS/qos_ison $INTERFACE_ $CLASS_`" == yes ] ; then
      MAX="`$SCRIPTS/qos_getbw "$INTERFACE_" "$CLASS_" Max F`"
      GUARANTEED="`$SCRIPTS/qos_getbw "$INTERFACE_" "$CLASS_" Guaranteed F`"
      if [ -z "$MAX" ] ; then
        MAX="--"
      fi
      if [ -z "$GUARANTEED" ] ; then
        GUARANTEED="--"
      fi
      PRIORITY="`$SCRIPTS/qos_getpriority $INTERFACE_ $CLASS_`"
      PRIORITY="`$SCRIPTS/qos_printpriority $PRIORITY`"
    else
      echo "[Disabled Class]" 
    fi
  else
    echo "[QoS Disabled]" 
  fi
  if ! [ -z "$PRIORITY" -o -z "$MAX" -o -z "$GUARANTEED" ] ; then
    echo "[Priority: $PRIORITY] [Max: $MAX] [Guaranteed: $GUARANTEED]"
  fi
}

if [ "$TYPE" = Gateway ] ; then
  CONFIG=$REGISTER/system/net/nb
  if ! cd $CONFIG/Gateways ; then
    echo "</select>"
    exit 1
  fi
  GWS=`ls -d *`
  for G in $GWS ; do
    DESCRIPTION=`cat $G/Description 2>/dev/null`
    ENABLED=`cat $G/Enabled 2>/dev/null`
    #FEATURE=`$SCRIPTS/getfeature GG`
    #if ! checkfeature $FEATURE ; then
    #  X=nofeature_._
    #else
    #  X=""
    #fi
    X=""
    if ! [ -f "$REGISTER/system/mrtg/html/`echo GW$G|awk '{print tolower($0)}'`.html" ] ; then
       Z=nomrtg_._
    else
       Z=""
    fi
    echo "<option value='${X}${Z}GW$G'>$DESCRIPTION</option>"
  done
else
  CONFIG="$REGISTER/system/net/interfaces"
  cd $CONFIG
  INTERFACES="`ls`"
  for I in $INTERFACES ; do
   if [ -d /sys/class/net/$I ] ; then
    if [ "`cat $I/QoS/Enabled 2>/dev/null`" = yes -o "$TYPE" != QoS ] ; then
      if [ "$INTERFACE" = "$I" ] ; then
        SELECTED=selected
      else
        SELECTED=""
      fi
      if [ "$TYPE" != QoS ] ; then
        X=""    
        #if [ "${I:0:3}" = ETH ] ; then
          #FEATURE=`$SCRIPTS/getfeature NG $I`
          #if ! checkfeature $FEATURE ; then
          #  X=nofeature_._
          #fi
        #fi
        if ! [ -f "$REGISTER/system/mrtg/html/`echo $I|awk '{print tolower($0)}'`.html" ] ; then
          Z=nomrtg_._
        else
          Z=""
        fi
        echo "<option value='${X}${Z}$I' $SELECTED>$I</option>"

        if [ -d "$I/VLAN" ] ; then
          cd $I/VLAN
          VLANS=`ls`
          for V in $VLANS ; do
           if [ -d /sys/class/net/$I.$V ] ; then
            if [ "$X" = "nofeature_._" ] ; then
              X2=nofeature_._
            else
              X2="" 
            fi
            if ! [ -f "$REGISTER/system/mrtg/html/`echo ${I}.$V|awk '{print tolower($0)}'`.html" ] ; then
              Z2=nomrtg_._
            else
              Z2=""
            fi
            echo "<option value='${X2}${Z2}${I}.$V'>$I vlan $V</option>"
           fi
          done
          cd $CONFIG
        fi
      else
        CLASSES=`$SCRIPTS/qos_classlist $I`
        for C in $CLASSES ; do
          X=""
          #if [ "${I:0:3}" = ETH ] ; then
            #FEATURE=`$SCRIPTS/getfeature NG $I`
            #if ! checkfeature $FEATURE ; then
            #  X=nofeature_._
            #fi
          #fi
          if ! [ -f "$REGISTER/system/mrtg/html/`echo ${I}_$C|awk '{print tolower($0)}'`.html" ] ; then
            Z=nomrtg_._
          else
            Z=""
          fi
          echo "<option value='${X}${Z}${I}_$C'>${I}_$C</option>"        
        done

      fi
    fi
   fi
  done
  echo "</select>"
  if [ "$TYPE" = QoS ] ; then
    echo "<script>"
    N=0
    echo "QoSParam=new Array();"
    for I in $INTERFACES ; do
      if [ "`cat $I/QoS/Enabled 2>/dev/null`" = yes  ] ; then 
        CLASSES=`$SCRIPTS/qos_classlist $I`
        for C in $CLASSES ; do
          echo "QoSParam[$N]=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`qos_array $I $C`\";"
          N=$((N+1))
        done
      fi
    done
    echo "</script>"
  fi
fi
