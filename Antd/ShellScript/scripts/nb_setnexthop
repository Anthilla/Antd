#!/bin/sh
. /etc/kerbynet.conf
export PATH=/usr/latest:$PATH
if [ "`cat $REGISTER/system/net/nb/Enabled 2>/dev/null`" != "yes" ] ; then
  ip ro del default 2>/dev/null
  rm -f /tmp/nb/ActiveGW
  $SCRIPTS/nb_autoppp down
  $SCRIPTS/routerconfig
  $SCRIPTS/setpppgw any
  exit 0
fi
CONFIG=$REGISTER/system/net/nb/Gateways
MODE=`cat $REGISTER/system/net/nb/Mode 2>/dev/null`
cd $CONFIG
function CheckDefault {
 cGW="$1"
 cN=`echo $cGW | wc -w`
 [ "$cN" -eq 0 ] && return 1
 if [ "$cN" -eq 1 ] ; then
   [ "`cat $cGW/Enabled 2>/dev/null`" != "yes" -o -r /tmp/nb/Gateways/$cGW/Fault ] && return 1
   cINTERFACE=`cat $cGW/Interface 2>/dev/null`
   cIP=`cat $cGW/IP 2>/dev/null`
   if [ -n "$cIP" ] ; then
     if ip ro | grep ^default | grep -v metric | grep -q -w "via $cIP" ; then
       return 0
     else
       return 1
     fi
   else
     if ip ro | grep ^default | grep -v metric | grep -w -v via | grep -q -w "dev $cINTERFACE" ; then
       return 0
     else
       return 1
     fi
   fi
 else
  return 1
 fi

}
GW=`ls -d ?? 2>/dev/null`
RULES=""
CHANGE=""
MAX=0
N=0
for G in $GW ; do
  PREV_ACTIVEGW=`cat /tmp/nb/ActiveGW 2>/dev/null`
  STATUSDIR=/tmp/nb/Gateways/$G
  mkdir -p $STATUSDIR 2>/dev/null
  if [ "`cat $G/Enabled 2>/dev/null`" = "yes" -a ! -r $STATUSDIR/Fault ] && ip ro sh ta 1$G |grep -q ^default ; then
    INTERFACE=`cat $G/Interface 2>/dev/null`
    IP=`cat $G/IP 2>/dev/null`
    WEIGHT=`cat $G/Weight 2>/dev/null`
    if [ -n "$IP" ] ; then
      TMP="nexthop via $IP weight $WEIGHT realm 1$G"
      X="$IP"
      NOVIA="xxx"
      if ! ip ro sh | grep -w nexthop |grep -w realm | grep -w "via $IP" | grep -w -q "weight $WEIGHT" ; then
        CHANGE="yes"
      fi
    else
      TMP="nexthop dev $INTERFACE weight $WEIGHT realm 1$G"
      X="$INTERFACE"
      NOVIA="via"
      #if ! ip ro sh | grep -w -q "$TMP" ; then
      if ! ip ro sh | grep -w nexthop |grep -w realm | grep -w "dev $X" | grep -w -q "weight $WEIGHT" ; then
        CHANGE="yes"
      fi
    fi
    N=$((N+1))
    NEXTHOP="$NEXTHOP $TMP"
    ACTIVEGW="$ACTIVEGW $G"
    if ! [ -r $STATUSDIR/Rule ] ; then
      ip rule add fwmark 1$G ta 1$G && touch $STATUSDIR/Rule
    fi
    if [ $MAX -lt $WEIGHT ] ;then
      MAX=$WEIGHT
      FTHOP=$TMP
      XMAX=$X
      NOVIAMAX=$NOVIA
      FTACTIVEGW=$G
    fi
  else
    if [ -r $STATUSDIR/Rule ] ; then
      ip rule del fwmark 1$G ta 1$G && rm -f $STATUSDIR/Rule
    fi
  fi
done
if [ "$MODE" != FO ] ; then
  if [ $N -eq 1 ] ; then
    if ip ro sh | grep default | grep -v metric | grep -v "$NOVIA" |grep -q -w "$X" ; then
      CHANGE=""
    fi
    ip ro sh | grep -q nexthop && CHANGE="yes"
  else
    if [ -z "$CHANGE" -a "$N" -gt 0 ] ; then
      [ "`ip ro sh | grep nexthop |wc -l`" -eq "$N" ] || CHANGE="yes"
    fi
  fi
else
  CHANGE=""
  NEXTHOP=$FTHOP
  if [ -n "$NEXTHOP" ] ; then
    if [ "`ip ro sh | grep nexthop |wc -l`" -gt 0 ] ; then
      CHANGE="yes"
    else
      if ! ip ro sh | grep default | grep -v metric | grep -v "$NOVIAMAX" | grep -q -w "$XMAX" ; then
        if ! CheckDefault "$PREV_ACTIVEGW" ; then
          CHANGE="yes"
        else
          PREV_WEIGHT=`cat $PREV_ACTIVEGW/Weight 2>/dev/null`
          [ "$PREV_WEIGHT" -eq "$MAX" ] || CHANGE="yes"
        fi
      fi
    fi
  fi
  ACTIVEGW=$FTACTIVEGW
fi
if [ "$CHANGE" = yes ] ; then
  ip ro del default 2>/dev/null
  /usr/latest/ip ro add default $NEXTHOP
  echo $ACTIVEGW > /tmp/nb/ActiveGW
  logger -t NetBalancer "Default Route has been changed: $NEXTHOP"
else
  if [ -z "$NEXTHOP" ] ; then
    if [ "`cat $PREV_ACTIVEGW/Enabled 2>/dev/null`" = no ] ; then 
      ip ro del default 2>/dev/null
    fi
    rm -f /tmp/nb/ActiveGW
  fi
fi
$SCRIPTS/nb_connectivity
E=$?
if [ $E -ne 0 ] ; then
  if ! ip ro |grep -v metric | grep -q ^default ; then
     #ip ro add default dev lo
     $SCRIPTS/nb_addfakegw
  fi
  [ $E -ne 55 ] && logger -t NetBalancer "WARNING: connectivity unavailable"
  $SCRIPTS/alert CONNECTIVITY DOWN &
  $SCRIPTS/nb_autoppp up
else
  $SCRIPTS/nb_autoppp down
fi
exit 0
