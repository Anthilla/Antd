#!/bin/sh
. /etc/kerbynet.conf
. $SCRIPTS/net.inc
function PrintIPTable () {
  if cd $1 2>/dev/null ; then
    ADDRESSES=`ls`
    echo '<table width=100% bgcolor=#f0f0f0 bordercolor=#FFFFFF border=1 style="border-collapse: collapse;" cellspacing=0 cellpadding=0>'
    for A in $ADDRESSES ; do
       echo "<tr>"
       IP=`cat $A/IP`
       NETMASK=`cat $A/Netmask 2>/dev/null`
       STATUS=`cat $A/STATUS 2>/dev/null`
       if [ "$STATUS" == up ] ; then
          CHECKED=checked
       else 
          CHECKED=""
       fi
       OBJ=`pwd | awk -F"/net/interfaces/" '{print $2}'`/$A 
       echo "<td width=1% nowrap>&nbsp;<input type=radio name=obj value='IP,$OBJ'>&nbsp</td><td width=45%><font>&nbsp;&nbsp;&nbsp;$IP</font></td><td><font>&nbsp;&nbsp;&nbsp;$NETMASK</font></td>"
       echo "<td width=1% align=right><input type=checkbox $CHECKED value='IP,$OBJ' onclick='cbchange(this.value,this.checked)'></td>"
       echo "</tr>"
    done
    echo "</table>"
  fi
}
INTERFACENAME="$1"
[ -z "$INTERFACENAME" ] && exit 1
CONFIG="$REGISTER/system/net/interfaces"
VLAN=`echo $INTERFACENAME | awk -F. '{print $2}'`
INTERFACE=`echo $INTERFACENAME |cut -d. -f1`
IDIR="$CONFIG/$INTERFACE"
if ! [ -d "$IDIR" ] ; then
   echo "Interface $INTERFACE doesn't exist." 1>&2
   exit 2
fi
STk="`rand``cat /tmp/STk_Admin 2>/dev/null`"
cd $IDIR
echo "<html><head><link rel=stylesheet type=text/css href=/default.css><title>$INTERFACENAME</title>"
if [ "$INTERFACE" == VPN99 ] ; then
  LOG_SUFFIX=H2L
else
  LOG_SUFFIX=L2L
fi
cat <<EOF
<meta http-equiv="Pragma" content="no-cache">
<script language=javascript>
function getobj() {
  var Objs=document.data.obj;
  if (Objs!=undefined) {
    for (i=0; i<Objs.length; i++) {
      if (Objs[i].checked) {
        return(Objs[i].value);
      }
    }
  }
  return "";
}
function DisableInput () {
  for (i=0; i<document.data.elements.length; i++) {
    document.data.elements[i].disabled=true;
  }
}
function cbchange (OBJ,STATUS) {
  if (confirm("Are you sure?")) {
    DisableInput();
    window.location="kerbynet?Section=Network&STk=$STk&Action=UpDown&Interface=$INTERFACE&OBJ="+OBJ+"&Status="+STATUS;
  } else {
    window.location.reload(); 
  }
}
function WiFiLog() {
   var newwin=window.open("kerbynet?Section=LOG&STk=$STk&Action=Manage&Process=hostapd&Filter=$INTERFACE","ManageLog","top=100,left=100,width=850,height=650,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function VPNLOG() {
   var newwin=window.open("kerbynet?Section=LOG&STk=$STk&Action=Manage&Process=${INTERFACE}_${LOG_SUFFIX}","ManageLog","top=100,left=100,width=850,height=650,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function BONDLOG() {
   var newwin=window.open("kerbynet?Section=LOG&STk=$STk&Action=Manage&Process=Bonding&Filter=$INTERFACE","ManageLog","top=100,left=100,width=850,height=650,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function PPPLog() {
   var newwin=window.open("kerbynet?Section=LOG&STk=$STk&Action=Manage&Process=pppd","ManageLog","top=100,left=100,width=850,height=650,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function dhclient() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=DHClient&Interface=$INTERFACE","DHClientConfig","top=300,left=300,width=480,height=250,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function VPNConfig() {
   var newwin=window.open("kerbynet?Section=VPN&STk=$STk&Action=Config&Interface=$INTERFACE","VPNConfig","top=100,left=150,width=900,height=530,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function BridgeConfig() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=ConfigBridge&Interface=$INTERFACE","BridgeConfig","top=100,left=200,width=700,height=450,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function BridgeView() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=BridgeView&Interface=$INTERFACE","BridgeView","top=100,left=200,width=700,height=400,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function BridgeRemove() {
   if (confirm("Are you sure you want to remove $INTERFACE?")) {
      location="kerbynet?Section=Network&STk=$STk&Action=RemoveBridge&Interface=$INTERFACE";
   }
}
function BondRemove() {
   if (confirm("Are you sure you want to remove $INTERFACE?")) {
      location="kerbynet?Section=Network&STk=$STk&Action=RemoveBond&Interface=$INTERFACE";
   }
}
function BondConfig() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=ConfigBond&Interface=$INTERFACE","BondConfig","top=100,left=200,width=700,height=480,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function PPPConfig() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=ConfigPPP&Interface=$INTERFACE","PPPConfig","top=200,left=300,width=650,height=450,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function Config3G() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=Config3G&Interface=$INTERFACE","3GConfig","top=200,left=300,width=650,height=450,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function PPPRemove() {
   if (confirm("Are you sure you want to remove $INTERFACE (PPPoE)?")) {
      location="kerbynet?Section=Network&STk=$STk&Action=RemovePPP&Interface=$INTERFACE";
   }
}
function Remove3G() {
   if (confirm("Are you sure you want to remove $INTERFACE (2G/3G)?")) {
      location="kerbynet?Section=Network&STk=$STk&Action=Remove3G&Interface=$INTERFACE";
   }
}
function BondView() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=BondView&Interface=$INTERFACE","BondView","top=100,left=200,width=700,height=400,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function VPNRemove() {
   if (confirm("Are you sure you want to remove $INTERFACE?")) {
      location="kerbynet?Section=VPN&STk=$STk&Action=Remove&Interface=$INTERFACE";
   }
}
function CreateVLAN() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=CreateVLAN&Interface=$INTERFACE","VLANConfig","top=350,left=300,width=550,height=200,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function EditVLAN() {
	OBJ=getobj();
	if (OBJ.substr(0,2)=="VL") {
                OBJ=OBJ.substr(3);
                components=OBJ.split("/");
                VLAN=components[2];
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=EditVLAN&Interface=$INTERFACE&VLAN="+VLAN+"&OBJ="+OBJ,"VLANConfig","top=350,left=300,width=550,height=200,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
                newwin.focus();
        } else {
                alert("You have to select a VLAN to edit.");
	} 
}
function RemoveVLAN() {
	OBJ=getobj();
	if (OBJ.substr(0,2)=="VL") {
                OBJ=OBJ.substr(3);
                components=OBJ.split("/");
                VLAN=components[2];
                if (confirm("Are you sure you want to remove the VLAN "+VLAN+" from the interface $INTERFACE ?")) {
                    window.location="kerbynet?Section=Network&STk=$STk&Action=RemoveVLAN&Interface=$INTERFACE&VLAN="+VLAN+"&OBJ="+OBJ
                }
        } else {
                alert("You have to select a VLAN to remove.");
	} 
}
function RawView() {
   var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=RawViewInterface&Interface=$INTERFACE","RawView","top=100,left=200,width=730,height=500,scrollbars=yes,menubar=no,toolbar=no,statusbar=no");
   newwin.focus();
}
function addip () {
	OBJ=getobj();
	VLAN=""   
	OBJTYPE="";
	if (OBJ!="") {
		if (OBJ.substr(0,2)=="IP") {
			OBJTYPE="IP";
		} else if (OBJ.substr(0,2)=="VL") {
			OBJTYPE="VLAN";
		}
		OBJ=OBJ.substr(3);
		components=OBJ.split("/");
		if (components[1]=="VLAN") {
			VLAN=components[2];
		}
	}
	var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=AddIP&Interface=$INTERFACE&VLAN="+VLAN+"&OBJTYPE="+OBJTYPE+"&OBJ="+OBJ,"IPConfig","top=350,left=400,width=400,height=200,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
        newwin.focus();
}
function editip () {
	OBJ=getobj();
	if (OBJ.substr(0,2)=="IP") {
                OBJ=OBJ.substr(3);
                components=OBJ.split("/");
                if (components[1]=="VLAN") {
                        VLAN=components[2];
                } else {
			VLAN=""
                }
		var newwin=window.open("kerbynet?Section=Network&STk=$STk&Action=EditIP&Interface=$INTERFACE&VLAN="+VLAN+"&OBJ="+OBJ,"IPConfig","top=350,left=400,width=400,height=200,scrollbars=no,menubar=no,toolbar=no,statusbar=no");
                newwin.focus();
	} else {
        	alert("You have to select an IP address to edit.");
	}
}
function removeip () {
	OBJ=getobj();
	if (OBJ.substr(0,2)=="IP") {
                OBJ=OBJ.substr(3);
                components=OBJ.split("/");
                if (components[1]=="VLAN") {
                        VLAN=components[2];
                } else {
			VLAN=""
                }
                if (confirm("Are you sure you want to remove the selected IP from the interface $INTERFACE "+(VLAN==""?"":" vlan "+VLAN)+" ?")) {
                    window.location="kerbynet?Section=Network&STk=$STk&Action=RemoveIP&Interface=$INTERFACE&VLAN="+VLAN+"&OBJ="+OBJ
                }
	} else {
        	alert("You have to select an IP address to remove.");
	}
}
function pathcost(Interface) {
   pc=prompt("Path cost of "+Interface,"");
   if (pc!=undefined) {
     npc=parseInt(pc);
     if (npc>0 && npc<2147483648) {
        location="kerbynet?Section=Network&STk=$STk&Action=SetPathCost&Interface="+Interface+"&PathCost="+npc; 
     } else {
        alert("Value out of range");
     }
    
   }
}
function RemoveConfig() {
  if (confirm("Are you sure you want to remove $INTERFACE configuration?")) {
      location="kerbynet?Section=Network&STk=$STk&Action=RemoveETH&Interface=$INTERFACE";
  } 
}
</script>
EOF
echo "</head><body onload='document.data.reset()'><form name=data method=post action=kerbynet>"
echo "<table width=100%><tr><td valign=top>"
echo '<table width=100% border=1 style="border-collapse: collapse;" cellspacing=0 cellpadding=0><tr>'
echo "<td>&nbsp;<input type=radio name=obj value='IF'>"
if [ "${INTERFACE:0:6}" == BRIDGE ] ; then
   COMPONENTS="<font class=Smaller1>(`ext_bridgename $INTERFACE`)</font>"
fi
if [ "${INTERFACE:0:4}" == BOND ] ; then
   COMPONENTS="<font class=Smaller1>(`ext_bondname $INTERFACE`)</font>"
fi
echo "<font color=#2020C0><b>`echo $INTERFACE |awk '{print toupper($0)}'` $COMPONENTS</b></font>"
echo "<font color=#00b000>&nbsp;&nbsp;"
$SCRIPTS/getlinkstatus $INTERFACE
echo "</font>"
echo "<br><font color=#0000d0>&nbsp;"
cat Description
echo "</font></td><td align=right width=1%>"
STATUS=`cat STATUS 2>/dev/null`
if [ "${INTERFACE:0:3}" != ppp ] ; then 
  if [ "$STATUS" == up ] ; then
    CHECKED=checked
  else
    CHECKED=""
  fi
else
  if [ -r $IDIR/ETHERNET ] ; then
    if ps -ef |grep pppoe-connect | grep -q $INTERFACE ; then
      CHECKED=checked
    else
      CHECKED=""
    fi
  else
    if ps -ef |grep -w 3Gconnect |grep -q $INTERFACE ; then
      CHECKED=checked
    else
      CHECKED=""
    fi
  fi
fi
echo "<font color=#009000 class=Smaller1>UP</font><br><input type=checkbox $CHECKED value='IF,$INTERFACE' onclick='cbchange(this.value,this.checked)'>"
echo "</td></tr></table>"
if ! [ -r $IDIR/Bridge/Name -o -r $IDIR/Bond/Name ] ; then
  IPDIR="$IDIR/IP"
  PrintIPTable "$IPDIR"
  if cd "$IDIR/VLAN" 2>/dev/null ; then 
    VLANS=`ls`
    for VLAN in $VLANS ; do
      DESCRIPTION=`cat $VLAN/Description`
      STATUS=`cat $VLAN/STATUS`
      if [ "$STATUS" == up ] ; then
        CHECKED=checked
      else
        CHECKED=""
      fi
      OBJ=`pwd | awk -F"/net/interfaces/" '{print $2}'`/$VLAN
      echo '<table width=100% bordercolor=#FFFFFF border=1 style="border-collapse: collapse;" cellspacing=0 cellpadding=0><tr>'
      if ! [ -r $VLAN/Bridge/Name -o -r $VLAN/Bond/Name ] ; then
         VLANRADIO="<input type=radio name=obj value='VL,$OBJ'>"
      else
         VLANRADIO=""
      fi
      echo "<td width=1% nowrap>&nbsp;$VLANRADIO&nbsp;</td><td><font color=#000080><b>&nbsp;&nbsp;VLAN: $VLAN</b></font>&nbsp;&nbsp;<font color=#0000d0>($DESCRIPTION)</font></td><td align=right width=1%><input type=checkbox $CHECKED value='VL,$OBJ' onclick='cbchange(this.value,this.checked)'></td>"
      echo '</tr></table>'
      if ! [ -r $VLAN/Bridge/Name -o -r $VLAN/Bond/Name ] ; then
        IPDIR="$VLAN/IP"
        PrintIPTable "$IPDIR"
      else
        BR=`cat $VLAN/Bridge/Name`
    echo "<table width=100%><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=#707070>This VLAN is member of $BR <font class=Smaller1>(`ext_bridgename $BR`)</font></font></td><td align=right><font color=#707070>Path Cost: </font><b>`cat /sys/class/net/$BR/brif/$INTERFACE.$VLAN/path_cost`</b>&nbsp;<input type=button value=Set style='width: 35; font-size: 10;' onclick='pathcost(\"$INTERFACE.$VLAN\")'</td></tr></table>"
      fi
      cd "$IDIR/VLAN"
    done
  fi
else
  if  [ -r $IDIR/Bond/Name ] ; then
    BOND=`cat $IDIR/Bond/Name`
    echo "<table width=100%><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=#707070>This device is member of $BOND <font class=Smaller1>(`ext_bondname $BOND`)</font></font></td><td align=right><font color=#707070></td></tr></table>"
    BONDED=true
  else
    BRIDGE=`cat $IDIR/Bridge/Name`
    echo "<table width=100%><tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=#707070>This device is member of $BRIDGE <font class=Smaller1>(`ext_bridgename $BRIDGE`)</font></font></td><td align=right><font color=#707070>Path Cost: </font><b>`cat /sys/class/net/$BRIDGE/brif/$INTERFACE/path_cost`</b>&nbsp;<input type=button value=Set style='width: 35; font-size: 10;' onclick='pathcost(\"$INTERFACE\")'</td></tr></table>"
    BRIDGED=true
  fi
fi
echo "</td><td align=right valign=top>"
if [ "${INTERFACE:0:3}" = VPN -a "$INTERFACE" != VPN99 ] ; then
  GW="`cat $IDIR/Gateway 2>/dev/null`"
  if [ -n "$GW" -a "$GW" != Auto ] ; then
    GWDESC="`cat $REGISTER/system/net/nb/Gateways/$GW/Description 2>/dev/null`"
    echo "<span style='background-color: #d0d0d0'><font class=Smaller1 color=#ffffff><b>&nbsp;&nbsp;Gateway Status (${GWDESC}):&nbsp;&nbsp;`$SCRIPTS/nb_statusgw $GW |grep -w font` &nbsp;&nbsp;</b></span><br><br>"
  fi
fi
if [ "${INTERFACE:0:3}" != ppp -a "$INTERFACE" != VPN99 ] ; then
  DynIP=`source $SCRIPTS/show_dhclientip $INTERFACE`
  echo "<span style='background-color: #9090ff'><font class=Smaller1 color=#ffffff><b>&nbsp;&nbsp;Dynamic IP: $DynIP&nbsp;&nbsp;</span>"
fi
echo "<span style='background-color: #9090ff'><font class=Smaller1 color=#ffffff><b>&nbsp;&nbsp;"
if [ "${INTERFACE:0:3}" != ppp ] ; then
  HWMAC=`getmac $INTERFACE`
  echo "MAC: $HWMAC"
  echo "&nbsp;&nbsp;</b></font></span><br>"
else
  if [ -r $IDIR/ETHERNET ] ; then
    echo "User: `cat $IDIR/USER 2> /dev/null`"
    echo "&nbsp;&nbsp;</b></font></span><br>"
    echo '<input type=button value="Configure" style="width: 75; font-size: 10;" onclick="PPPConfig()"><input type=button value="Remove" style="width: 75; font-size: 10;" onclick="PPPRemove()"><br>'
  else
    echo "APN: `cat $IDIR/APN 2> /dev/null`"
    echo "&nbsp;&nbsp;</b></font></span><br>"
    echo '<input type=button value="Configure" style="width: 75; font-size: 10;" onclick="Config3G()"><input type=button value="Remove" style="width: 75; font-size: 10;" onclick="Remove3G()"><br>'
  fi
  echo '<input type=button value="Show Log" style="width: 75; font-size: 10;" onclick="PPPLog()"><br>'
fi
if [ "${INTERFACE:0:3}" == VPN ] ; then 
   echo '<input type=button name=VPNConf value="Configure" style="width: 75; font-size: 10;" onclick="VPNConfig()"><input type=button value="Show Log" style="width: 75; font-size: 10;" onclick="VPNLOG()"><input type=button name=VPNRem value="Remove" style="width: 75; font-size: 10;" onclick="VPNRemove()"><br>'
   
   if [ "$INTERFACE" == VPN99 ] ; then
      echo '<script>document.data.VPNConf.disabled=true;document.data.VPNRem.disabled=true;</script>'
   fi


fi
if [ "${INTERFACE:0:6}" == BRIDGE ] ; then 
   echo '<input type=button value="Configure" style="width: 75; font-size: 10;" onclick="BridgeConfig()"><input type=button value="View" style="width: 75; font-size: 10;" onclick="BridgeView()"><input type=button value="Remove" style="width: 75; font-size: 10;" onclick="BridgeRemove()"><br>'
fi
if [ "${INTERFACE:0:4}" == BOND ] ; then 
   echo '<input type=button value="Configure" style="width: 75; font-size: 10;" onclick="BondConfig()"><input type=button value="View" style="width: 50; font-size: 10;" onclick="BondView()"><input type=button value="Log" style="width: 40; font-size: 10;" onclick="BONDLOG()"><input type=button value="Remove" style="width: 75; font-size: 10;" onclick="BondRemove()"><br>'
fi
if [ "${INTERFACE:0:3}" == ETH -a "$HWMAC" == 000000000000 ] ; then
  echo "<font color=#ff0000 class=Bigger1>Hardware removed</font><br><input type=button value='Remove Configuration' onclick='RemoveConfig()'>" 
else
  echo  '<input type=button value="Show Info" style="width: 75; font-size: 10;" onclick="RawView()"><br>'
  if [ -d "$IDIR/WiFi" ] ; then
    ISWIFI=yes
  else
    ISWIFI=""
  fi
  
  if [ "$ISWIFI" = yes ] ; then
      if [ "`cat /var/register/system/net/interfaces/$INTERFACE/WiFi/Mode 2>/dev/null`" = ap ] ; then
        echo '<input type=button value="Wi-Fi Log" style="width: 75; font-size: 10;" onclick="WiFiLog()"><br>'  
      fi 
  fi
  if [ -z "$BRIDGED" -a -z "$BONDED" -a "${INTERFACE:0:3}" != ppp ] ; then 
    if [ -z "$ISWIFI" ] ; then
      echo '<input type=button value="Create VLAN" style="width: 75; font-size: 10;" onclick="CreateVLAN()"><input type=button value="Edit VLAN" style="width: 75; font-size: 10;" onclick="EditVLAN()"><input type=button value="Rem. VLAN" style="width: 75; font-size: 10;" onclick="RemoveVLAN()"><br>'
    fi
    if [ "${INTERFACE:0:3}" != ppp -a "$INTERFACE" != VPN99 ] ; then
      echo -n '<input type=button value="Dyn.IP" style="width: 50; font-size: 10;" onclick="dhclient()">'
    fi
    cat <<EOF
<input type=button value="Add IP" style="width: 50; font-size: 10;" onclick="addip()"><input type=button value="Edit IP" style="width: 50; font-size: 10;" onclick="editip()"><input type=button value="Remove IP" style="width: 75; font-size: 10;" onclick="removeip()">
EOF
  fi
fi
echo "</td></tr></table>"
echo "</form></body></html>"
