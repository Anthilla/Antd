namespace Antd.Certificates {
    public class CaConfigurationFiles {

        public static string[] RootCaOpensslCnf(string root) {
            return new[] {
                "[ ca ]",
                "# `man ca`",
                "default_ca = CA_default",
                "",
                "[ CA_default ]",
                $"dir               = {root}",
                "certs             = $dir/certs",
                "crl_dir           = $dir/crl",
                "new_certs_dir     = $dir/newcerts",
                "database          = $dir/index.txt",
                "serial            = $dir/serial",
                "RANDFILE          = $dir/private/.rand",
                "private_key       = $dir/private/ca.key.pem",
                "certificate       = $dir/certs/ca.cert.pem",
                "",
                "crlnumber         = $dir/crlnumber",
                "crl               = $dir/crl/ca.crl.pem",
                "crl_extensions    = crl_ext",
                "default_crl_days  = 30",
                "",
                "default_md        = sha256",
                "",
                "name_opt          = ca_default",
                "cert_opt          = ca_default",
                "default_days      = 375",
                "preserve          = no",
                "policy            = policy_strict",
                "",
                "[ policy_strict ]",
                "countryName             = match",
                "stateOrProvinceName     = match",
                "organizationName        = match",
                "organizationalUnitName  = optional",
                "commonName              = supplied",
                "emailAddress            = optional",
                "",
                "[ policy_loose ]",
                "countryName             = optional",
                "stateOrProvinceName     = optional",
                "localityName            = optional",
                "organizationName        = optional",
                "organizationalUnitName  = optional",
                "commonName              = supplied",
                "emailAddress            = optional",
                "",
                "[ req ]",
                "default_bits        = 2048",
                "distinguished_name  = req_distinguished_name",
                "string_mask         = utf8only",
                "",
                "default_md          = sha256",
                "",
                "x509_extensions     = v3_ca",
                "",
                "[ req_distinguished_name ]",
                "countryName                     = Country Name (2 letter code)",
                "stateOrProvinceName             = State or Province Name",
                "localityName                    = Locality Name",
                "0.organizationName              = Organization Name",
                "organizationalUnitName          = Organizational Unit Name",
                "commonName                      = Common Name",
                "emailAddress                    = Email Address",
                "",
                "countryName_default             =",
                "stateOrProvinceName_default     =",
                "localityName_default            =",
                "0.organizationName_default      =",
                "organizationalUnitName_default  =",
                "emailAddress_default            =",
                "",
                "[ v3_ca ]",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid:always,issuer",
                "basicConstraints = critical, CA:true",
                "keyUsage = critical, digitalSignature, cRLSign, keyCertSign",
                "",
                "[ v3_intermediate_ca ]",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid:always,issuer",
                "basicConstraints = critical, CA:true, pathlen:0",
                "keyUsage = critical, digitalSignature, cRLSign, keyCertSign",
                "",
                "[ usr_cert ]",
                "basicConstraints = CA:FALSE",
                "nsCertType = client, email",
                "nsComment = \"OpenSSL Generated Client Certificate\"",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid,issuer",
                "keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment",
                "extendedKeyUsage = clientAuth, emailProtection",
                "",
                "[ server_cert ]",
                "basicConstraints = CA:FALSE",
                "nsCertType = server",
                "nsComment = \"OpenSSL Generated Server Certificate\"",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid,issuer:always",
                "keyUsage = critical, digitalSignature, keyEncipherment",
                "extendedKeyUsage = serverAuth",
                "",
                "[ crl_ext ]",
                "authorityKeyIdentifier=keyid:always",
                "",
                "[ ocsp ]",
                "basicConstraints = CA:FALSE",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid,issuer",
                "keyUsage = critical, digitalSignature",
                "extendedKeyUsage = critical, OCSPSigning"
            };
        }

        public static string[] IntermediateCaOpensslCnf(string root, string crl) {
            return new[] {
                "[ ca ]",
                "# `man ca`",
                "default_ca = CA_default",
                "",
                "[ CA_default ]",
                $"dir               = {root}",
                "certs             = $dir/certs",
                "crl_dir           = $dir/crl",
                "new_certs_dir     = $dir/newcerts",
                "database          = $dir/index.txt",
                "serial            = $dir/serial",
                "RANDFILE          = $dir/private/.rand",
                "",
                "private_key       = $dir/private/intermediate.key.pem",
                "certificate       = $dir/certs/intermediate.cert.pem",
                "",
                "crlnumber         = $dir/crlnumber",
                "crl               = $dir/crl/intermediate.crl.pem",
                "crl_extensions    = crl_ext",
                "default_crl_days  = 30",
                "",
                "default_md        = sha256",
                "",
                "name_opt          = ca_default",
                "cert_opt          = ca_default",
                "default_days      = 375",
                "preserve          = no",
                "policy            = policy_loose",
                "",
                "[ policy_strict ]",
                "countryName             = match",
                "stateOrProvinceName     = match",
                "organizationName        = match",
                "organizationalUnitName  = optional",
                "commonName              = supplied",
                "emailAddress            = optional",
                "",
                "[ policy_loose ]",
                "countryName             = optional",
                "stateOrProvinceName     = optional",
                "localityName            = optional",
                "organizationName        = optional",
                "organizationalUnitName  = optional",
                "commonName              = supplied",
                "emailAddress            = optional",
                "",
                "[ req ]",
                "default_bits        = 2048",
                "distinguished_name  = req_distinguished_name",
                "string_mask         = utf8only",
                "",
                "default_md          = sha256",
                "",
                "x509_extensions     = v3_ca",
                "",
                "[ req_distinguished_name ]",
                "countryName                     = Country Name (2 letter code)",
                "stateOrProvinceName             = State or Province Name",
                "localityName                    = Locality Name",
                "0.organizationName              = Organization Name",
                "organizationalUnitName          = Organizational Unit Name",
                "commonName                      = Common Name",
                "emailAddress                    = Email Address",
                "",
                "countryName_default             =",
                "stateOrProvinceName_default     =",
                "localityName_default            =",
                "0.organizationName_default      =",
                "organizationalUnitName_default  =",
                "emailAddress_default            =",
                "",
                "[ v3_ca ]",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid:always,issuer",
                "basicConstraints = critical, CA:true",
                "keyUsage = critical, digitalSignature, cRLSign, keyCertSign",
                "",
                "[ v3_intermediate_ca ]",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid:always,issuer",
                "basicConstraints = critical, CA:true, pathlen:0",
                "keyUsage = critical, digitalSignature, cRLSign, keyCertSign",
                "",
                "[ usr_cert ]",
                "basicConstraints = CA:FALSE",
                "nsCertType = client, email",
                "nsComment = \"OpenSSL Generated Client Certificate\"",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid,issuer",
                "keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment",
                "extendedKeyUsage = clientAuth, emailProtection",
                $"crlDistributionPoints = URI:{crl}",
                "",
                "[ server_cert ]",
                "basicConstraints = CA:FALSE",
                "nsCertType = server",
                "nsComment = \"OpenSSL Generated Server Certificate\"",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid,issuer:always",
                "keyUsage = critical, digitalSignature, keyEncipherment",
                "extendedKeyUsage = serverAuth",
                $"crlDistributionPoints = URI:{crl}",
                "",
                "[ crl_ext ]",
                "authorityKeyIdentifier=keyid:always",
                "",
                "[ ocsp ]",
                "basicConstraints = CA:FALSE",
                "subjectKeyIdentifier = hash",
                "authorityKeyIdentifier = keyid,issuer",
                "keyUsage = critical, digitalSignature",
                "extendedKeyUsage = critical, OCSPSigning"
            };
        }

        public static string[] IntermediateCaDomainControllerOpensslCnf(string root, string crl, string dcGuid, string dcDns) {
            return new[] {
                $"CRLDISTPT = {crl}",
                $"DOMAINCONTROLLERGUID = {dcGuid}",
                $"DOMAINDNS = DNS:{dcDns}",
                "",
                "[ ca ]",
                "default_ca = CA_default",
                "",
                "[ CA_default ]",
                $"dir = {root}",
                "certs = $dir/certs",
                "crl_dir = $dir/crl",
                "new_certs_dir = $dir/newcerts",
                "database = $dir/index.txt",
                "serial = $dir/serial",
                "RANDFILE = $dir/private/.rand",
                "private_key = $dir/private/intermediate.key.pem",
                "certificate = $dir/certs/intermediate.cert.pem",
                "crlnumber = $dir/crlnumber",
                "crl = $dir/crl/intermediate.crl.pem",
                "crl_extensions = crl_ext",
                "default_crl_days = 30",
                "default_md = sha256",
                "name_opt = ca_default",
                "cert_opt = ca_default",
                "default_days = 730",
                "preserve = no",
                "policy = policy_loose",
                "x509_extensions = usr_cert_mskdc",
                "",
                "[ policy_loose ]",
                "countryName = optional",
                "stateOrProvinceName = optional",
                "localityName = optional",
                "organizationName = optional",
                "organizationalUnitName = optional",
                "commonName = supplied",
                "emailAddress = optional",
                "",
                "[ req ]",
                "default_bits = 2048",
                "default_keyfile = privkey.pem",
                "distinguished_name = req_distinguished_name",
                "attributes = req_attributes",
                "x509_extensions = v3_ca",
                "string_mask = utf8only",
                "",
                "[ req_distinguished_name ]",
                "countryName = Country Name (2 letter code)",
                "stateOrProvinceName = State or Province Name",
                "localityName = Locality Name",
                "0.organizationName = Organization Name",
                "organizationalUnitName = Organizational Unit Name",
                "commonName = Common Name",
                "emailAddress = Email Address",
                "countryName_default = IT",
                "stateOrProvinceName_default = Varese",
                "localityName_default = Caronno Pertusella",
                "0.organizationName_default = AnthillaSRL",
                "organizationalUnitName_default =",
                "emailAddress_default =",
                "",
                "[ v3_req ]",
                "basicConstraints = CA:FALSE",
                "keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
                "",
                "[ v3_ca ]",
                "subjectKeyIdentifier=hash",
                "authorityKeyIdentifier=keyid:always,issuer",
                "basicConstraints = CA:true",
                "keyUsage = cRLSign, keyCertSign",
                "crlDistributionPoints=URI:$CRLDISTPT",
                "nsCertType = sslCA, emailCA",
                "subjectAltName=email:copy",
                "issuerAltName=issuer:copy",
                "",
                "[ crl_ext ]",
                "issuerAltName=issuer:copy",
                "authorityKeyIdentifier=keyid:always",
                "",
                "[ usr_cert_mskdc ]",
                "basicConstraints=CA:FALSE",
                "crlDistributionPoints=URI:$CRLDISTPT",
                "nsCertType = server",
                "keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
                "nsComment = \"Domain Controller Certificate\"",
                "subjectKeyIdentifier=hash",
                "authorityKeyIdentifier=keyid,issuer",
                "subjectAltName=@dc_subjalt",
                "issuerAltName=issuer:copy",
                "nsCaRevocationUrl = $CRLDISTPT",
                "extendedKeyUsage = clientAuth,serverAuth",
                "",
                "[dc_subjalt]",
                "DNS=$DOMAINDNS",
                "otherName=1.3.6.1.4.1.311.25.1;FORMAT:HEX,OCTETSTRING:$DOMAINCONTROLLERGUID"
            };
        }

        public static string[] IntermediateCaSmartCardOpensslCnf(string root, string crl, string upn) {
            return new[] {
                $"CRLDISTPT = {crl}",
                $"USERPRINCIPALNAME = {upn}",
                "",
                "[ ca ]",
                "default_ca = CA_default",
                "",
                "[ CA_default ]",
                $"dir = {root}",
                "certs = $dir/certs",
                "crl_dir = $dir/crl",
                "new_certs_dir = $dir/newcerts",
                "database = $dir/index.txt",
                "serial = $dir/serial",
                "RANDFILE = $dir/private/.rand",
                "private_key = $dir/private/intermediate.key.pem",
                "certificate = $dir/certs/intermediate.cert.pem",
                "crlnumber = $dir/crlnumber",
                "crl = $dir/crl/intermediate.crl.pem",
                "crl_extensions = crl_ext",
                "default_crl_days = 30",
                "default_md = sha256",
                "name_opt = ca_default",
                "cert_opt = ca_default",
                "default_days = 730",
                "preserve = no",
                "policy = policy_loose",
                "x509_extensions = usr_cert_scarduser",
                "",
                "[ policy_loose ]",
                "countryName = optional",
                "stateOrProvinceName = optional",
                "localityName = optional",
                "organizationName = optional",
                "organizationalUnitName = optional",
                "commonName = supplied",
                "emailAddress = optional",
                "",
                "[ req ]",
                "default_bits = 2048",
                "default_keyfile = privkey.pem",
                "distinguished_name = req_distinguished_name",
                "attributes = req_attributes",
                "x509_extensions = v3_ca # The extensions to add to the self signed cert",
                "string_mask = utf8only",
                "",
                "[ req_distinguished_name ]",
                "countryName = Country Name (2 letter code)",
                "stateOrProvinceName = State or Province Name",
                "localityName = Locality Name",
                "0.organizationName = Organization Name",
                "organizationalUnitName = Organizational Unit Name",
                "commonName = Common Name",
                "emailAddress = Email Address",
                "countryName_default = IT",
                "stateOrProvinceName_default = Varese",
                "localityName_default = Caronno Pertusella",
                "0.organizationName_default = AnthillaSRL",
                "organizationalUnitName_default =",
                "emailAddress_default =",
                "",
                "[ v3_req ]",
                "basicConstraints = CA:FALSE",
                "keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
                "",
                "[ v3_ca ]",
                "subjectKeyIdentifier=hash",
                "authorityKeyIdentifier=keyid:always,issuer",
                "basicConstraints = CA:true",
                "keyUsage = cRLSign, keyCertSign",
                "crlDistributionPoints=URI:$CRLDISTPT",
                "nsCertType = sslCA, emailCA",
                "subjectAltName=email:copy",
                "issuerAltName=issuer:copy",
                "",
                "[ crl_ext ]",
                "issuerAltName=issuer:copy",
                "authorityKeyIdentifier=keyid:always",
                "",
                "[ usr_cert_scarduser ]",
                "basicConstraints=CA:FALSE",
                "crlDistributionPoints=URI:$CRLDISTPT",
                "nsCertType = client, email",
                "keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
                "nsComment = \"Smart Card Login Certificate\"",
                "subjectKeyIdentifier=hash",
                "authorityKeyIdentifier=keyid,issuer",
                "subjectAltName=email:copy,otherName:1.3.6.1.4.1.311.20.2.3;UTF8:$USERPRINCIPALNAME",
                "issuerAltName=issuer:copy",
                "nsCaRevocationUrl = $CRLDISTPT",
                "extendedKeyUsage = clientAuth,1.3.6.1.4.1.311.20.2.2"
            };
        }
    }
}
